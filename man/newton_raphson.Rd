% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/newton_raphson.R
\name{newton_raphson}
\alias{newton_raphson}
\title{newton_raphson}
\usage{
newton_raphson(par, fn, gr, hess, inverted = FALSE, control = list(), ...)
}
\arguments{
\item{par}{numeric, initial guess}

\item{fn}{function, objective function to maximized}

\item{gr}{function, gradient function}

\item{hess}{function, hessian function}

\item{control}{list, control for the local search, see function description.}
}
\value{
list, designed to be mostly consistent with `optim` in stats.
        list elements:
           `par`: best solution
           `value`: function value `fn(par)`
           `gr`: gradient at `par`
           `hess`: hessian at `par`   
           `convergence`: convergence status, 0 if converged, 1 if not
                          (consistent with `optim`)
           `count`: a count of `fn` and `gr` evaluations
                    (consistent with `optim`)
           `trace_info`: a matrix of trace information (optional)
}
\description{
Performs Newton-Raphson to find a solution that finds a local
maxima of the objective function `fn`. We assume the maxima
is an interior point of the support and that an initial guess par
is near the local maxima.
}
\details{
Use a global search method like `sim_anneal` to find a good initial
guess that is near a global maximum of `fn`.
}
\section{Functions}{
\itemize{
\item \code{newton_raphson()}: control

}}
\section{Fields}{

\describe{
\item{\code{eta}}{numeric, learning rate}

\item{\code{fnscale}}{numeric, scaling factor for `fn`. If negative, then
turns the problem into a maximization problem.}

\item{\code{maxit}}{integer, maximum number of iterations, defaults to 1000}

\item{\code{convergence}}{function, check for convergence, defaults to
`||gr(par)||` and `||(par1 - par0)||` being approximately zero
(gradient test uses absolute tolerance and parameter difference
test uses relative tolerance, see `abs_tol` and `rel_tol`).}

\item{\code{proj}}{function, projection function to enforce domain of support}

\item{\code{trace}}{logical, keep track of trace information}

\item{\code{abs_tol}}{numeric, absolute tolerance for convergence, which is used
by the default `convergence` function}

\item{\code{rel_tol}}{numeric, absolute tolerance for convergence, which is used
by the default `convergence` function}

\item{\code{REPORT}}{integer, frequency of tracer reports, defautls to every
10 iterations}
}}

