% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/numerical_mle.R
\name{mle_local_search}
\alias{mle_local_search}
\title{mle_local_search}
\usage{
mle_local_search(ll, theta0, dir, options = list())
}
\arguments{
\item{ll}{function, log-likelihood function}

\item{theta0}{numeric, initial guess}

\item{dir}{function, promising direction function}

\item{options}{list, options for the local search:
* `sup` predicate function, domain of support for log-likelihood
* `eta` numeric, learning rate, defaults to 1
* `max_iter` integer, maximum number of iterations, defaults to 1000
* `max_iter_ls` integer, maximum number of iterations for the line search,
defaults to 1000
* `abs_tol` numeric, tolerance for convergence, defaults to NULL
(use `rel_tol`)
* `rel_tol` numeric, relative tolerance for convergence, defaults to 1e-5
* `r` numeric, backtracking line search parameter, defaults to 0.8
* `proj` function, projection function to enforce domain of support
* `norm` function, we pass the difference of successive theta updates
to the norm to check for convergence, defaults to the infinity norm.
* `debug` logical, output debugging information if TRUE; default FALSE
* `trace` logical, if TRUE store the path of the search in the `path`
attribute of the output}
}
\value{
an `mle` object with the following additional attributes:
* `iter` integer, the number of iterations
* `converged` logical, whether the algorithm converged
* `options` list, the options used for the search
* `path` matrix, the path of the search if `trace` is TRUE
}
\description{
This assumes the MLE is an interior point and that you have provided
an initial guess `theta0` that is near it. Use a global search method
like `sim_anneal` to find a good initial guess.
}
