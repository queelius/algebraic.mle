[{"path":"https://queelius.github.io/algebraic.mle/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 algebraic.mle authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic-mle.html","id":"r-package-algebraic-mle","dir":"Articles","previous_headings":"","what":"R package: algebraic.mle","title":"algebraic.mle","text":"algebra maximum likelihood estimators (MLE). MLEs many desirable, well-defined statistical properties. define algebra MLEs.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic-mle.html","id":"installation","dir":"Articles","previous_headings":"R package: algebraic.mle","what":"Installation","title":"algebraic.mle","text":"can install development version algebraic.mle GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"queelius/algebraic.mle\")"},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic-mle.html","id":"todo","dir":"Articles","previous_headings":"R package: algebraic.mle","what":"TODO","title":"algebraic.mle","text":"Use generics standard notation operations MLEs, like addition. May need look multiple dispatch.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic-mle.html","id":"api","dir":"Articles","previous_headings":"R package: algebraic.mle","what":"API","title":"algebraic.mle","text":"object representing fitted model type mle object, maximum likelihood estimator model respect observed data. API mostly consists generic methods implementations various mle type objects. full list functions, see function reference algebraic.mle.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic.mle.html","id":"r-package-algebraic-mle","dir":"Articles","previous_headings":"","what":"R package: algebraic.mle","title":"algebraic.mle","text":"algebra maximum likelihood estimators (MLE). MLEs many desirable, well-defined statistical properties. define algebra MLEs.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic.mle.html","id":"installation","dir":"Articles","previous_headings":"R package: algebraic.mle","what":"Installation","title":"algebraic.mle","text":"can install development version algebraic.mle GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"queelius/algebraic.mle\")"},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic.mle.html","id":"todo","dir":"Articles","previous_headings":"R package: algebraic.mle","what":"TODO","title":"algebraic.mle","text":"Use generics standard notation operations MLEs, like addition. May need look multiple dispatch.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/algebraic.mle.html","id":"api","dir":"Articles","previous_headings":"R package: algebraic.mle","what":"API","title":"algebraic.mle","text":"object representing fitted model type mle object, maximum likelihood estimator model respect observed data. API mostly consists generic methods implementations various mle type objects. full list functions, see function reference algebraic.mle.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/exponential-mle.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Exponential distribution MLE","text":"demonstrate R package algebraic.mle, consider relatively simple case random sample ..d. exponentially distributed random variables. show generate sample, estimate rate parameter exponential distribution, compute performance measures MLE. also show compute sampling distribution MLE. First, load R package algebraic.mle, along R packages need, :","code":"library(algebraic.mle) library(tibble) library(ggplot2)"},{"path":"https://queelius.github.io/algebraic.mle/articles/exponential-mle.html","id":"dgp-and-generating-samples","dir":"Articles","previous_headings":"","what":"DGP and generating samples","title":"Exponential distribution MLE","text":"consider exponential distribution rate parameter \\(\\lambda\\). exponential distribution pdf given \\(f(x) = \\lambda \\exp(-\\lambda x)\\) \\(x \\geq 0\\) \\(f(x) = 0\\) otherwise. exponential distribution unimodal single parameter, \\(\\lambda\\), rate parameter. exponential distribution continuous distribution. control rate parameter \\(\\lambda\\) DGP (data generating process). following R code, specity DGP parameters exponential distribution: denotes sample size \\(n=25\\) exponential distribution rate parameter \\(\\lambda=3\\). set seed random number generator : generate random sample \\(X_i \\sim \\operatorname{EXP}(\\lambda=3)\\) \\(=1,\\ldots,n\\) following R code: observed sample size \\(n=25\\) exponential distribution rate parameter \\(\\lambda=3\\). show observations sample (data frame) : pdf exponential distribution given \\[     f(x;\\lambda) = \\lambda \\exp(-\\lambda x) \\] \\(x \\geq 0\\) \\(f(x;\\lambda) = 0\\) otherwise. show histogram sample overlaid plot exponential function’s pdf: Next, show estimate rate parameter \\(\\lambda\\) exponential distribution.","code":"n <- 25 rate <- 3 set.seed(42) x <- tibble(x=rexp(n,rate)) print(head(x,n=4)) #> # A tibble: 4 × 1 #>        x #>    <dbl> #> 1 0.0661 #> 2 0.220  #> 3 0.0945 #> 4 0.0127"},{"path":"https://queelius.github.io/algebraic.mle/articles/exponential-mle.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum likelihood estimation","title":"Exponential distribution MLE","text":"MLE value \\(\\lambda\\) maximizes likelihood function \\[     L(\\lambda) = \\prod_{=1}^n f(x_i;\\lambda). \\] normally work log-likelihood function instead likelihood function. Since log-likelihood function monotone increasing function, MLE value \\(\\lambda\\) maximizes log-likelihood function, \\[     \\ell(\\lambda) = \\sum_{=1}^n \\log f(x_i;\\lambda) = \\sum_{=1}^n         \\bigl\\{ \\log \\lambda - \\lambda x_i \\bigr\\}.  \\] find value maximizes \\(\\ell\\), take derivative \\(\\ell\\) respect \\(\\lambda\\) set equal zero. obtain following equation: \\[     \\frac{n}{\\lambda} - \\sum_{=1}^n x_i = 0.  \\] equation unique solution, \\[     \\hat\\lambda = \\frac{n}{\\sum_i x_i} = \\frac{1}{\\bar x}, \\] MLE \\(\\lambda\\). algebraic.mle package provides function mle_exp computes MLE rate parameter \\(\\lambda\\) exponential distribution. Since mle_exp returns mle object, can use various methods functions , like summary function, help us understand MLE point estimate sampling distribution. can compute MLE rate parameter \\(\\lambda\\) exponential distribution : get summary MLE: MLE rate parameter \\(\\lambda\\) exponential distribution \\(\\hat\\lambda=2.8967006\\), may computed point function: next section, show estimate sampling distribution MLE \\(\\hat\\lambda\\). also show compute performance measures MLE.","code":"rate.hat <- mle_exp(x$x) summary(rate.hat) #> Maximum likelihood estimator of type mle_exp is normally distributed. #> The estimates of the parameters are given by: #>     rate  #> 2.896701  #> The standard error is  0.5793401 . #> The asymptotic 95% confidence interval of the parameters are given by: #>          2.5%   97.5% #> rate 1.943771 3.84963 #> The MSE of the estimator is  0.01456749 . #> The log-likelihood is  1.589309 . #> The AIC is  -1.178618 . point(rate.hat) #>     rate  #> 2.896701"},{"path":"https://queelius.github.io/algebraic.mle/articles/exponential-mle.html","id":"sampling-distribution-of-the-mle","dir":"Articles","previous_headings":"Maximum likelihood estimation","what":"Sampling distribution of the MLE","title":"Exponential distribution MLE","text":"general, estimate sampling distribution, generate \\(B=10000\\) samples (size \\(25\\)) corresponding estimators, \\(\\hat\\theta^{(1)},\\ldots,\\hat\\theta^{(B)}\\). Normally, \\(B\\) samples, , gather \\(B\\) samples one sample (used weighted MLE), contain (Fisher) information \\(\\theta\\). However, nice property MLEs , asymptotically, converge normal distribution mean given true parameter, case \\(\\lambda\\), variance-covariance given inverse Fisher information matrix \\(\\), case \\((\\lambda) = n/\\lambda^2\\), .e., \\(\\hat\\lambda \\sim N(\\lambda,^{-1}(\\lambda))\\). Next, plot respective densities non-asymptotic sampling distribution \\(\\hat\\theta\\) theoretical asymptotic distribution. relatively small sample MLE, see asymptotic distribution still good approximation. know \\(\\lambda\\), may estimate sample, thus may approximate sampling distribution \\(\\hat\\lambda\\) \\(N(\\hat\\lambda,^{-1}(\\hat\\lambda))\\). can compute Fisher information variance-covariance matrices : NOTE: rate.hat vector, vcov returned matrix variances covariances, variances diagonal. (may consider \\(1 \\times 1\\) matrices.) Since giving one sample, provide \\(B\\) estimates \\(\\lambda\\). However, can sample approximation asymptotic distribution \\(\\hat\\lambda\\) : Next, plot densities asymptotic sampling distribution approximation asymptotic sampling distribution. Due sampling error, see approximation, estimate asymptotic sampling distribution \\(N(\\hat\\lambda,\\hat\\lambda/n^{1/2})\\), shifted left sample true distribution, appear quite similar otherwise.","code":"fim(rate.hat) #>     rate  #> 2.979427 vcov(rate.hat) #>     rate  #> 0.335635 data.approx <- sampler(rate.hat)(B)"},{"path":"https://queelius.github.io/algebraic.mle/articles/exponential-mle.html","id":"performance-measures-of-the-mle","dir":"Articles","previous_headings":"Maximum likelihood estimation","what":"Performance measures of the MLE","title":"Exponential distribution MLE","text":"can show confidence interval : smaller confidence interval, better estimator. bias \\(b(\\hat\\lambda,\\lambda) = E(\\hat\\lambda) - \\lambda\\) another way measuring performance estimator. Ideally, bias zero components estimated. MLE, bias asymptotically zero, small samples may quite biased. exponential distribution’s rate parameter, MLE biased. ’s R code compute estimate bias \\(\\hat\\lambda\\) true bias \\(\\hat\\lambda\\): , similar. mean squared error (MSE) another performance measure estimator. given \\[     \\operatorname{mse}(\\hat\\lambda) = E\\bigl\\{(\\hat\\lambda - \\lambda)^2)\\bigr\\}, \\] variance \\[     \\operatorname{var}(\\hat\\lambda) = E\\bigl\\{(\\hat\\lambda - E(\\hat\\lambda))^2)\\bigr\\}, \\] since variance accounts estimators spread around central tendency (may biased). Another way compute MSE given \\[     \\operatorname{mse}(\\hat\\lambda) = \\operatorname{var}(\\hat\\lambda) +         \\operatorname{bias}(\\hat\\lambda,\\lambda)^2. \\] may, course, estimate MSE \\(\\lambda\\) known replacing bias estimate bias, discussed previously. ’s R code compute MSE \\(\\hat\\lambda\\), estimate MSE true MSE: quite similar case.","code":"confint(rate.hat) #>          2.5%   97.5% #> rate 1.943771 3.84963 bias(rate.hat) #> bias(rate)  #>  0.1206959 bias(rate.hat,rate) #> bias(rate)  #>      0.125 (mse.hat <- mse(rate.hat)) #> [1] 0.01456749 (mse.true <- mse(rate.hat,rate)) #> [1] 0.015625"},{"path":"https://queelius.github.io/algebraic.mle/articles/exponential-mle.html","id":"prediction-intervals","dir":"Articles","previous_headings":"","what":"Prediction intervals","title":"Exponential distribution MLE","text":"Frequently, actually interested predicting outcome random variable (vector) estimating parameters . observed sample \\(\\mathcal{D} = \\{T_i\\}_{=1}^n\\) \\(T_i \\sim \\operatorname{EXP}(\\lambda)\\), \\(\\lambda\\) known. estimate \\(\\lambda\\), derive MLE \\[     \\hat\\lambda = \\frac{1}{\\bar{\\mathcal{D}}}, \\] , asymptotically, normally distributed mean \\(\\lambda\\) variance \\(\\lambda^2/n\\). wish model uncertainty new observation, \\(\\hat{T}_{n+1}|\\mathcal{D}\\). considering uncertainty inherent exponential distribution uncertainty estimate \\(\\hat\\lambda\\) \\(\\lambda\\). particular, let \\(\\hat{T}_{n+1}|\\hat\\lambda \\sim \\operatorname{EXP}(\\hat\\lambda)\\) \\(\\hat\\lambda \\sim N(\\lambda,\\lambda^2/n)\\) (sampling distribution MLE). , joint distribution \\(\\hat{T}_{n+1}\\) \\(\\hat\\lambda\\) pdf given \\[     f(t,\\lambda) = f_{\\hat{T}|\\hat\\lambda}(t|\\lambda) f_{\\hat\\lambda}(\\lambda), \\] thus find \\(f(t)\\), marginalize \\(\\lambda\\), obtaining \\[     f(t) = \\int_{-\\infty}^{\\infty} f_{\\hat{T}_{n+1},\\hat\\lambda}(t,r) dr. \\] Given information sample, uncertainty new observation characterized distribution \\[     \\hat{T}_{n+1} \\sim f(t). \\] greater variance \\(T_{n+1}|\\hat\\lambda \\sim \\operatorname{EXP}(\\hat\\lambda)\\) , stated earlier, know \\(\\lambda\\), uncertain estimate \\(\\hat\\lambda\\). pred, compute predictive interval (PI) distribution \\(\\hat{T}_{n+1}\\) using Monte Carlo simulation, replace integral sum large number draws joint distribution \\(\\hat{T}_{n+1}\\) \\(\\hat\\lambda\\) compute empirical quantiles. function pred takes arguments x, case mle object, sampler distribution random variable interest, case rexp (sampler exponential distribution). sampler must compatible parameter value x (.e., point(x)). compute PI \\(\\hat{T}_{n+1}\\): compare \\(T_{n+1}|\\hat\\lambda \\sim \\operatorname{EXP}(\\hat\\lambda = 3.5948592)\\)? see 95% quantile interval \\(T_{n+1}|\\hat\\lambda\\) bit smaller \\(\\hat{T}_{n+1}\\), expected. course, sufficiently large sample sizes, converge quantiles.","code":"rate.hat <- mle_exp(rexp(n,rate)) pred(x=rate.hat,samp=rexp) #>           mean      lower    upper #> [1,] 0.2905545 0.00711804 1.117284 q.95 <- c(1/point(rate.hat),qexp(c(.025,.975),point(rate.hat))) names(q.95) <- c(\"mean\",\"lower\", \"upper\") print(q.95) #>        mean       lower       upper  #> 0.278175010 0.007042781 1.026154077"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Normal distribution MLE","text":"demonstrate R package algebraic.mle, consider relatively simple case random sample ..d. normally distributed random variables. First, load R package algebraic.mle :","code":"library(algebraic.mle)  # make it so that i only show 3 digits after the decimal point options(digits=3)"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"generating-a-sample","dir":"Articles","previous_headings":"","what":"Generating a sample","title":"Normal distribution MLE","text":"define parameters ..d. random sample : generate random sample \\(X_i \\sim \\operatorname{N}(\\mu=4,\\sigma^2=2)\\) \\(=1,\\ldots,n\\) : observed sample size \\(n=50\\). show observations sample (data frame) : show histogram sample :  see characteristic bell shaped curve normal distribution. prior know data normally distributed, evidence normal distribution good fit data.","code":"n <- 50 theta <- c(4,2) x <- rnorm(n,mean=theta[1],sd=sqrt(theta[2])) head(x,n=4) #> [1] -0.437  4.901  4.028  1.281 hist(x)"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum likelihood estimation","title":"Normal distribution MLE","text":"like estimate \\(\\theta=(4, 2)'\\), can using maximum likelihood estimation implemented algebraic.mle package: can show point estimate given data x : can show Fisher information matrix (FIM) variance-covariance matrix : can show confidence intervals : nice property MLEs , asymptotically, converge normal distribution mean given true parameter, case \\(\\theta = (\\mu,\\sigma^2)'\\), variance-covariance given inverse Fisher information matrix evaluated \\(\\theta\\). estimated confidence intervals statistics .","code":"theta.hat <- mle_normal(x) summary(theta.hat) #> Maximum likelihood estimator of type mle_normal is normally distributed. #> The estimates of the parameters are given by: #>   mu  var  #> 4.07 2.57  #> The standard error is  0.227 0.514 . #> The asymptotic 95% confidence interval of the parameters are given by: #>     2.5% 97.5% #> mu  3.69  4.44 #> var 1.73  3.42 #> The MSE of the estimator is  0.319 . #> The log-likelihood is  -94.6 . #> The AIC is  193 . point(theta.hat) #>   mu  var  #> 4.07 2.57 fim(theta.hat) #>      [,1] [,2] #> [1,] 19.4 0.00 #> [2,]  0.0 3.78 vcov(theta.hat) #>        [,1]  [,2] #> [1,] 0.0514 0.000 #> [2,] 0.0000 0.265 confint(theta.hat) #>     2.5% 97.5% #> mu  3.69  4.44 #> var 1.73  3.42"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"performance-measures-of-the-mle","dir":"Articles","previous_headings":"Maximum likelihood estimation","what":"Performance measures of the MLE","title":"Normal distribution MLE","text":"know \\(\\theta\\), may estimate sample, thus may approximate sampling distribution \\(\\hat\\theta\\) \\(\\mathcal{N}(\\hat\\theta,^{-1}(\\hat\\theta))\\). Let \\(F\\) denote true distribution function \\(X_j \\sim F\\) \\(j\\). Suppose population parameter \\(\\theta = t(F)\\) estimator \\(\\theta\\) given \\(\\hat\\theta = s(\\{X_1,\\ldots,X_n\\})\\). reasonable requirement estimator \\(\\hat\\theta\\) converges true parameter value \\(\\theta\\) collect data. particular, say consistent estimator \\(\\theta\\) \\(\\hat\\theta\\) converges probability \\(\\theta\\), denoted \\(\\hat\\theta \\overset{p}{\\mapsto} \\theta\\). regularity conditions hold MLE, \\(\\hat\\theta\\) consistent estimator \\(\\theta\\). However, finite sample sizes, estimator may biased. bias \\(\\hat\\theta\\) respect \\(\\theta\\) defined \\[     \\operatorname{bias}(\\hat\\theta,\\theta) = E(\\hat\\theta) - \\theta, \\] \\(\\operatorname{bias}(\\hat\\theta,\\theta) = 0\\) indicates \\(\\hat\\theta\\) unbiased estimator \\(\\theta\\). function true distribution \\(F\\), bias unknown statistic. However, case normal, \\(\\hat\\mu\\) unbiased , analytically, bias \\(\\hat\\sigma^2\\) given \\(-\\frac{1}{n} \\sigma^2\\): \\(\\sigma^2\\) known, may estimate using replacing \\(\\hat\\sigma^2\\) instead: mean squared error (MSE) another performance measure estimator. given \\[     \\operatorname{mse}(\\hat\\theta) = E\\bigl\\{(\\hat\\theta - \\theta)^T(\\hat\\theta - \\theta)\\bigr\\}, \\] Another way compute MSE given \\[     \\operatorname{mse}(\\hat\\theta) =         \\operatorname{trace}(\\operatorname{cov}(\\hat\\theta) +         \\operatorname{bias}(\\hat\\theta)^T         \\operatorname{bias}(\\hat\\theta). \\] ’s R code compute MSE \\(\\hat\\theta\\): looks pretty good estimate true MSE.","code":"bias(theta.hat,theta) #> [1]  0.00 -0.04 bias(theta.hat) #>             var  #>  0.0000 -0.0514 mse(theta.hat)        # estimate of MSE #> [1] 0.319 mse(theta.hat,theta)  # true MSE #> [1] 0.318"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"invariance-property-of-the-mle","dir":"Articles","previous_headings":"","what":"Invariance property of the MLE","title":"Normal distribution MLE","text":"interesting property MLE \\(\\hat\\theta\\) MLE \\(f(\\theta)\\) given \\(f(\\hat\\theta)\\). distribution \\(f(\\hat\\theta)\\)? Asymptotically, normally distributed mean given \\(f(\\theta)\\) variace-covariance given covariance sampling distribution \\(f(\\hat\\theta)\\). provide two methods compute variance-covariance.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"delta-method","dir":"Articles","previous_headings":"Invariance property of the MLE","what":"Delta method","title":"Normal distribution MLE","text":"\\(f\\) differentiable, variance-covariance given \\[ \\operatorname{var}(f(\\hat\\theta)) = \\operatorname{E}\\bigl\\{     \\bigl(f(\\hat\\theta) - f(\\theta)\\bigr)^2\\bigr\\} =     \\operatorname{E}\\bigl\\{J_f(\\hat\\theta) (\\hat\\theta)^{-1} J_f(\\hat\\theta)^T\\bigr\\}. \\] , \\(J_f(\\hat\\theta)\\) Jacobian \\(f\\) evaluated \\(\\hat\\theta\\).","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"monte-carlo-method","dir":"Articles","previous_headings":"Invariance property of the MLE","what":"Monte-carlo method","title":"Normal distribution MLE","text":"delta method requires \\(f\\) differentiable, may use Monte-carlo method estimate distribution \\(f(\\hat\\theta)\\) function \\(f\\). simply sample MLE \\(\\hat\\theta\\) apply \\(f\\) point estimates take covariance sample. Next, show compute sampling distribution \\(g(\\hat\\theta)\\) function \\(g\\) MLE \\(\\hat\\theta\\) using delta mc methods.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"example-1","dir":"Articles","previous_headings":"Invariance property of the MLE","what":"Example 1","title":"Normal distribution MLE","text":"Let \\(g(\\theta) = \\theta + b\\) matrix \\(\\) vector \\(b\\). (simple linear transformation \\(\\theta\\).) can define \\(g\\) R : compute MLE \\(g(\\theta)\\) : pretty close.","code":"A <- matrix(c(2,3),nrow=2) b <- c(1,0) g <- function(theta) A %*% theta + b g.mc <- rmap(theta.hat,g,n=100000L) g.delta <- rmap(theta.hat,g,method=\"delta\")  round(vcov(g.mc),digits=3) #>       [,1]  [,2]  [,3]  [,4] #> [1,] 0.207 0.311 0.000 0.001 #> [2,] 0.311 0.467 0.001 0.001 #> [3,] 0.000 0.001 1.059 1.589 #> [4,] 0.001 0.001 1.589 2.384 round(vcov(g.delta),digits=3) #>       [,1]  [,2] [,3] [,4] #> [1,] 0.206 0.309 0.00 0.00 #> [2,] 0.309 0.463 0.00 0.00 #> [3,] 0.000 0.000 1.06 1.59 #> [4,] 0.000 0.000 1.59 2.38"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"weighted-mle-a-weighted-sum-of-maximum-likelihood-estimators","dir":"Articles","previous_headings":"","what":"Weighted MLE: a weighted sum of maximum likelihood estimators","title":"Normal distribution MLE","text":"Since variance-covariance MLE inversely proportional Fisher information MLE defined respect , can combine multiple MLEs \\(\\theta\\), may defined respect different kind sample, arrive MLE incorporates Fisher information samples. Consider \\(k\\) mutually independent MLEs parameter \\(\\theta\\), \\(\\hat\\theta_1,\\ldots,\\hat\\theta_k\\), \\(\\hat\\theta_j \\sim N(\\theta,I_j^{-1}(\\theta))\\). , sampling MLE \\(\\theta\\) incorporates data \\(\\hat\\theta_1,\\ldots,\\hat\\theta_k\\) given inverse-variance weighted mean, \\[     \\hat\\theta_w = \\left(\\sum_{j=1}^k I_j(\\theta)\\right)^{-1} \\left(\\sum_{j=1}^k I_j(\\theta) \\hat\\theta_j\\right), \\] , asymptotically, expected value \\(\\theta\\) variance-covariance \\(\\left(\\sum_{j=1}^k I_j(\\theta)\\right)^{-1}\\).","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"example-2","dir":"Articles","previous_headings":"Weighted MLE: a weighted sum of maximum likelihood estimators","what":"Example 2","title":"Normal distribution MLE","text":"evaluate performance weighted MLE, generate sample \\(N=1000\\) observations \\(\\mathcal{N}(\\theta)\\) compute MLE observed sample, denoted \\(\\hat\\theta\\). divide observed sample \\(r=5\\) sub-samples, size \\(N/r=100\\), compute MLE sub-sampled, denoted \\(\\theta^{(1)},\\ldots,\\theta^{(r)}\\). Finally, weighted combination MLEs form weighted MLE, denoted \\(\\theta_w\\): show results following R code. First, show weighted MLE MSE: MLE total sample MSE : see \\(\\hat\\theta\\) \\(\\hat\\theta_w\\) model approximately sampling distribution estimating \\(\\theta\\) given ..d. samples.","code":"N <- 1000 r <- 5 samp <- rnorm(N,mean=theta[1],sd=sqrt(theta[2])) samp.sub <- matrix(samp,nrow=r) mles.sub <- list(length=r) for (i in 1:r)     mles.sub[[i]] <- mle_normal(samp.sub[i,])  mle.wt <- mle_weighted(mles.sub) mle <- mle_normal(samp) point(mle.wt) #>   mu  var  #> 4.02 1.96 mse(mle.wt) #> [1] 0.00973 point(mle) #>   mu  var  #> 4.01 2.02 mse(mle) #> [1] 0.0102"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"bootstrapping-the-mles","dir":"Articles","previous_headings":"","what":"Bootstrapping the MLEs","title":"Normal distribution MLE","text":"Let’s compare earlier results relied large sampling assumption bootstrapped MLE using mle_boot. First, mle_boot needs MLE solver normal distribution. one mle_normal: just need wrap function takes data input returns MLE parameters pass mle_boot constructor: already printed theta.boot object, provided lot information , can obtain specified statistics Bootstrap MLE using standard interface algorithmic.mle, e.g.: see , part, results similar obtained using large sampling assumption. many additional arguments can pass mle_boot function. instance, parallel computing may used speed bootstrap process. , need load parallel package set parallel arguments mle_boot function. example, use 4 cores, following (note evaluate code vignette reduce number dependencies):","code":"mle_solver <- function(data, ind)     point(mle_normal(data[ind])) R <- 1000 # number of bootstrap replicates # recall the data is `x` (theta.boot <- mle_boot(mle_solver, x, R)) #> Maximum likelihood estimator of type mle_boot is normally distributed. #> The estimates of the parameters are given by: #>   mu  var  #> 4.07 2.57  #> The standard error is  0.228 0.472 . #> The asymptotic 95% confidence interval of the parameters are given by: #>     2.5% 97.5% #> mu  3.69  4.44 #> var 1.80  3.35 #> The MSE of the estimator is  0.277 . (point(theta.boot)) # point estimate #>   mu  var  #> 4.07 2.57 (vcov(theta.boot)) # variance-covariance matrix #>         [,1]    [,2] #> [1,]  0.0519 -0.0339 #> [2,] -0.0339  0.2223 (se(theta.boot)) # standard error #> [1] 0.228 0.472 (bias(theta.boot)) # bias #>       mu      var  #> -0.00902 -0.05327 (mse(theta.boot)) # mean squared error #> [1] 0.277 library(parallel) mle_boot(mle_solver, x, R, parallel = \"multicore\", ncpus = 4)"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"prediction-intervals","dir":"Articles","previous_headings":"","what":"Prediction intervals","title":"Normal distribution MLE","text":"Frequently, actually interested predicting outcome random variable (vector) estimating parameters . observed sample \\(\\mathcal{D} = \\{T_i\\}_{=1}^n\\) \\(T_i \\sim N(\\mu,\\sigma^2)\\), \\(\\theta = (\\mu,\\sigma^2)^T\\) known. compute MLE \\(\\theta\\), , asymptotically, normally distributed mean \\(\\theta\\) variance-covariance \\(^{-1}(\\theta)/n\\). wish model uncertainty new observation, \\(\\hat{T}_{n+1}|\\mathcal{D}\\). considering uncertainty inherent Normal distribution uncertainty estimate \\(\\hat\\theta\\) \\(\\theta\\). particular, let \\(\\hat{T}_{n+1}|\\hat\\theta \\sim N(\\hat\\mu,\\hat\\sigma^2)\\) \\(\\hat\\theta \\sim N(\\theta,^{-1}(\\theta)/n)\\) (sampling distribution MLE). , joint distribution \\(\\hat{T}_{n+1}\\) \\(\\hat\\theta\\) pdf given \\[     f(t,\\theta) = f_{\\hat{T}|\\hat\\theta}(t|\\theta=(\\mu,\\sigma^2)) f_{\\hat\\theta}(\\theta), \\] thus find \\(f(t)\\), marginalize \\(\\theta\\), obtaining \\[     f(t) = \\int_{-\\infty}^\\infty \\int_{-\\infty}^{\\infty} f_{\\hat{T}_{n+1},\\hat\\mu,\\hat\\sigma^2}(t,\\mu,\\sigma^2) d\\mu d\\sigma^2. \\] Given information sample, uncertainty new observation characterized distribution \\[     \\hat{T}_{n+1} \\sim f(t). \\] greater variance \\(T_{n+1}|\\hat\\theta\\) , stated earlier, know \\(\\theta\\), uncertain estimate \\(\\hat\\theta\\). pred, compute predictive interval (PI) distribution \\(\\hat{T}_{n+1}\\) using Monte Carlo simulation, replace integral sum large number draws joint distribution \\(\\hat{T}_{n+1}\\) \\(\\hat\\theta\\) compute empirical quantiles. function pred takes arguments x, case mle object, sampler distribution random variable interest, case rnorm (sampler normal distribution). sampler must compatible output point(x), whether output scalar vector. compute PI \\(\\hat{T}_{n+1}\\): general, return \\(p\\)--\\(3\\) matrix, \\(p\\) dimension \\(T\\) columns mean, lower quantile, upper quantile predictive distribution. compare \\(T_{n+1}|\\hat\\theta\\)? can compute 95% quantile interval \\(T_{n+1}|\\hat\\theta\\) using qnorm function: see 95% quantile interval \\(T_{n+1}|\\hat\\theta\\) smaller \\(\\hat{T}_{n+1}\\), expected. , uncertainty parameter value \\(\\theta\\).","code":"pred(x=theta.hat, samp=function(n=1,theta) rnorm(n,theta[1],theta[2])) #>      mean lower upper #> [1,] 4.08  -1.2  9.33 mu <- point(theta.hat)[1] sd <- sqrt(point(theta.hat)[2]) c(mean=mu,lower=qnorm(.025,mean=mu, sd=sd),upper=qnorm(.975,mean=mu, sd=sd)) #> mean.mu   lower   upper  #>   4.067   0.923   7.210"},{"path":"https://queelius.github.io/algebraic.mle/articles/normal-mle.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Normal distribution MLE","text":"vignette, demonstrated use algebraic.mle package estimate sampling distribution MLE using large sampling assumption Bootstrap method. package provides various functions obtaining statistics MLE, allowing deeper understanding properties estimator.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Fitting models to unknown DGPs","text":"interested generative process gave rise data observed. real world, systems quite complex, settle simpler models analytical tractability. , usually assume: sample ..d. observations may reasonably modeled relatively simple process. factors, like ambient temperature, either negligible less constant sample. Since simulation, know underlying DGP (data generating process). ’s just \\[     T_i = W_i + \\epsilon_i \\] \\[     W_i \\sim \\operatorname{weibull}(k,\\lambda) \\] \\[     \\epsilon_i \\sim \\operatorname{normal}(0,\\sigma). \\] real world, know DGP. study, assume either \\(T_1,\\ldots,T_n\\) comes Weibull Normal. Clearly, true DGF bit complicated still simple compared realistic DGP. , process parametrically modeling observed data may take following steps: Visualize data, e.g., plot histogram data. Guess parametric distribution (components) might fit observed data system lifetime. Use statistical test goodness--fit. Repeat steps 2 3 measure goodness fit satisfactory.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"simulation-parameters-and-generation","dir":"Articles","previous_headings":"","what":"Simulation parameters and generation","title":"Fitting models to unknown DGPs","text":"simulation parameters given : generate data following R code: elements sample given :","code":"library(tibble) library(stats)  sim.n <- 27 sim.err.sd <- 0.1 sim.shape <- 20 sim.scale <- 3 sim.theta = c(sim.shape,sim.scale) set.seed(142334) sim.df <- tibble(lifetime=   rweibull(n=sim.n, shape=sim.shape, scale=sim.scale) +   rnorm(n=sim.n, mean=0, sd=sim.err.sd)) #> # A tibble: 6 × 1 #>   lifetime #>      <dbl> #> 1     2.94 #> 2     2.80 #> 3     3.10 #> 4     3.01 #> 5     3.23 #> 6     2.95"},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"visualizing-the-data","dir":"Articles","previous_headings":"","what":"Visualizing the data","title":"Fitting models to unknown DGPs","text":"Visualizing data good first step analysis data. data univariate bivariate, can plot histogram data pretty easily (’s multivariate, can plot marginal distributions data). show histogram simulated data :","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"parametrically-modeling-the-data","dir":"Articles","previous_headings":"","what":"Parametrically modeling the data","title":"Fitting models to unknown DGPs","text":"sample, might conclude? can difficult problem. case, know simulated data drawn distribution \\(T_i = W_i + \\epsilon_i\\) \\[   W_i \\sim \\operatorname{weibull}(\\lambda = 20,                                 k = 3) \\] \\[   \\epsilon_i \\sim \\operatorname{normal}(\\mu=0,\\sigma=0.1). \\] However, real-world data sets, know distribution. , let us suppose know true distribution data. interested , say, prediction, sufficiently large sample, use non-parametric methods “let data speak .” However, interested inference (e.g., explaining data) sample small, usually need make assumptions data. case, assume data drawn parametric distribution. many well-known, named parametric distributions, e.g., Pareto, Weibull, Normal, name . experience, seems like Weibull normal might good fits data. However, note since normal distribution permits negative values realized, may appropriate choice. Still, since approximations anyway, may big deal.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum likelihood estimation","title":"Fitting models to unknown DGPs","text":"First, let us fit Weibull distribution choosing appropriate shape \\(\\lambda\\) scale \\(k\\) parameters using maximum likelihood estimator. find MLE \\(\\theta = (\\lambda,k)'\\), need log-likelihood function, given following R code: definition log-likelihood, used built-R function dweibull compute sum log-density function observation. However, can also use algebraic.mle package compute log-likelihood function efficient manner. MLE point \\((\\hat k,\\hat\\lambda)'\\) maximum log-likelihood function support parameters. cases closed solution isn’t possible, use iterative techniques. popular choice Newton-Raphson, local search method relies upon gradient Hessian log-likelihood (Jocobian gradient) iteratively improve solution MLE equation. example Newton-raphson code: Newton-Raphson local search methods need good starting point (already close MLE) converge MLE. find good starting point, use global search method, Simulated Annealing, implemented sim_anneal function. code finding good starting point: get idea algorithm , can plot trace algorithm. Let’s take look plots. convergence plot, see history log-likelihood values algorithm progresses. left parameter trace plot shows best value shape parameter, \\(k\\), algorithm progresses, right plot \\(\\lambda\\) parameter. starting point hand, find MLE : mle_numerical function takes anything like optim object returns mle object . ’s summary : similar result can obtained mle_weibull function algebraic.mle package: either case, mle object exposes API provides number conventient methods, estimating variance-covariance matrix, confidence intervals, bias, . ’s code print summary MLE object: Let’s normal distribution. use mle_normal function algebraic.mle package: Let’s plot pdfs Weibull normal distributions: purple, true density (DGP). red, Weibull density. green, normal density. plot, ’s hard tell distribution better fit DGP. Interestingly, tails true distribution seem bit heavier tails Weibull Normal. may suggest heavier-tailed model may better fit, lognormal distribution, pursue . choose Weibull Normal distributions? discuss next section.","code":"loglike <- function(theta) sum(dweibull(   sim.df$lifetime, shape=theta[1], scale=theta[2], log=TRUE)) library(algebraic.mle) ll.wei <- weibull_loglike(sim.df$lifetime) # f is the function we want to find the root of # Jf is the jocabian of f # x0 is the starting point newton_raphson <- function(f, Jf, x0, iter=100) {   for (i in 1:iter)   {     fx <- f(x0)              # new function value     d <- solve(Jf(x0), fx)   # newton-raphson direction (pointing uphill)     x0 <- x0 - d             # newton-raphson update   }   x0 } # find a good starting position start <- sim_anneal(     fn = ll.wei,     par = sim.theta,     control = list(         t_init=100,         t_end=.1,         fnscale=-1,         it_per_temp=20,         maxit=10000L,         sup=function(theta) all(theta > 0),         trace=TRUE)) cat(\"initial guess (k0,lambda0)' = (\", start$par, \")'.\\n\") #> initial guess (k0,lambda0)' = ( 18.10665 2.956376 )'. library(algebraic.mle) mle.wei <- mle_numerical(optim(     par=start$par,     fn=ll.wei,     gr=weibull_score(sim.df$lifetime),     method=\"BFGS\",     control=list(fnscale=-1))) summary(mle.wei) #> Maximum likelihood estimator of type mle_numerical is normally distributed. #> The estimates of the parameters are given by: #> [1] 18.884786  2.953124 #> The MSE of the estimator is  0 . #> The log-likelihood is  9.141514 . #> The AIC is  -14.28303 . summary(mle_weibull(sim.df$lifetime)) #> Maximum likelihood estimator of type mle_weibull is normally distributed. #> The estimates of the parameters are given by: #> [1] 18.884786  2.953124 #> The standard error is  2.749064 0.03182087 . #> The asymptotic 95% confidence interval of the parameters are given by: #>             2.5%     97.5% #> param1 14.362978 23.406594 #> param2  2.900783  3.005465 #> The MSE of the estimator is  7.558365 . #> The log-likelihood is  9.141514 . #> The AIC is  -14.28303 . mle.norm <- mle_normal(sim.df$lifetime) summary(mle.norm) #> Maximum likelihood estimator of type mle_normal is normally distributed. #> The estimates of the parameters are given by: #>         mu        var  #> 2.87408422 0.02896918  #> The standard error is  0.03275565 0.007884412 . #> The asymptotic 95% confidence interval of the parameters are given by: #>           2.5%      97.5% #> mu  2.82020597 2.92796247 #> var 0.01600048 0.04193788 #> The MSE of the estimator is  0.001136248 . #> The log-likelihood is  9.499217 . #> The AIC is  -14.99843 ."},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"goodness-of-fit","dir":"Articles","previous_headings":"","what":"Goodness of fit","title":"Fitting models to unknown DGPs","text":"fitting model data precisely capture generative model \\(W\\). , good fit ? conduct goodness fit test, \\[\\begin{align}   H_0 &: \\text{data compatible Weibull distribution}\\\\   H_A &: \\text{data compatible Weibull distribution}. \\end{align}\\] perform test, use Cramer-von Mises test. test based Cramer-von Mises statistic, measure distance empirical distribution function data distribution function model. Cramer-von Mises statistic given \\[   \\hat D_n^2 = \\frac{1}{n}\\sum_{=1}^n \\left(\\hat F_n(x_i) - F(x_i)\\right)^2 \\] \\(\\hat F_n\\) empirical distribution function data \\(F\\) distribution function model. Looking \\(p\\)-value, see data compatible Weibull distribution. Now, let’s normal distribution: compatible data. However, Weibull distribution larger \\(p\\)-value, may suggest better fit. also AIC measure goodness fit. AIC given \\[   \\text{AIC} = -2\\log L + 2k, \\] \\(L\\) likelihood model \\(k\\) number parameters model. AIC measure tradeoff goodness fit complexity model. lower AIC value indicates better fit. Thus, according measure, Weibull distribution better fit.","code":"cramer.test <- function(obs.dat,ref.dat) {   stat <- CDFt::CramerVonMisesTwoSamples(obs.dat,ref.dat)   list(p.value=exp(-stat)/6.0,        cramer.stat=stat,        obs.size=length(obs.dat),        ref.size=length(ref.dat)) }  wei.shape <- point(mle.wei)[1] wei.scale <- point(mle.wei)[2] ref.dat <- rweibull(1000000,shape=wei.shape,scale=wei.scale) cramer.test(sim.df$lifetime,ref.dat) #> $p.value #> [1] 0.1566145 #>  #> $cramer.stat #> [1] 0.0622083 #>  #> $obs.size #> [1] 27 #>  #> $ref.size #> [1] 1000000 norm.mu <- point(mle.norm)[1] norm.var <- point(mle.norm)[2] ref.dat <- rnorm(1000000,mean=norm.mu,sd=sqrt(norm.var)) cramer.test(sim.df$lifetime,ref.dat) #> $p.value #> [1] 0.1534112 #>  #> $cramer.stat #> [1] 0.08287383 #>  #> $obs.size #> [1] 27 #>  #> $ref.size #> [1] 1000000 aic(mle.wei) #> [1] -14.28303 aic(mle.norm) #>       var  #> -14.99843"},{"path":"https://queelius.github.io/algebraic.mle/articles/unknow_dgp.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Fitting models to unknown DGPs","text":"post, shown fit Weibull Normal distributions simulated dataset whose true distribution, known, common name. shown compare two models using Cramer-von Mises test AIC measure goodness fit. came definitive conclusion model better, Weibull distribution larger \\(p\\)-value Cramer-von Mises test, lower AIC value, serves evidence better fit. saw true DGP visually different Weibull normal distributions. Notably, DGP longer tails , suggesting even better fit may long-tail distribution like log-normal Pareto distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/weibull-mle.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Analysis of simple time series data","text":"interested generative process gave rise data observed. real world, systems quite complex, settle simpler models analytical tractability. , usually assume: sample ..d. observations may reasonably modeled relatively simple process. factors, like ambient temperature, either negligible less constant sample. Since simulation, know underlying DGP (data generating process). ’s just \\[     T_i = W_i + \\epsilon_i \\] \\[     W_i \\sim \\operatorname{weibull}(k,\\lambda) \\] \\[     \\epsilon_i \\sim \\operatorname{normal}(0,\\sigma). \\] real world, know DGP. study, assume either \\(T_1,\\ldots,T_n\\) comes Weibull Normal. Clearly, true DGF bit complicated still simple compared realistic DGP. , process parametrically modeling observed data may take following steps: Visualize data, e.g., plot histogram data. Guess parametric distribution (components) might fit observed data system lifetime. Use statistical test goodness--fit. Repeat steps 2 3 measure goodness fit satisfactory.","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/weibull-mle.html","id":"simulation-parameters-and-generation","dir":"Articles","previous_headings":"","what":"Simulation parameters and generation","title":"Analysis of simple time series data","text":"simulation parameters given : generate data following R code: density plot DGP given :  elements sample given :","code":"library(ggplot2) library(tibble) library(numDeriv) library(stats)  sim.n <- 58 sim.err.sd <- 0.05 sim.shape <- 5 sim.scale <- 3 sim.theta = c(sim.shape,sim.scale) set.seed(1234) sim.df <- tibble(lifetime=                      rweibull(n=sim.n,                                    shape=sim.shape,                                    scale=sim.scale) +                      rnorm(n=sim.n,                            mean=0,                            sd=sim.err.sd))  dgp.density <- density(   rweibull(n=10000000,            shape=sim.shape,            scale=sim.scale) +   rnorm(n=10000000,         mean=0,         sd=sim.err.sd)) print(class(dgp.density)) #> [1] \"density\" plot(dgp.density,      main=\"Density of the DGP\",      xlab=\"System Lifetime\",      ylab=\"Density\",      col=\"light blue\",      lwd=2) #> # A tibble: 58 × 1 #>    lifetime #>       <dbl> #>  1     3.46 #>  2     2.64 #>  3     2.58 #>  4     2.55 #>  5     2.03 #>  6     2.47 #>  7     4.02 #>  8     3.13 #>  9     2.44 #> 10     2.75 #> # ℹ 48 more rows"},{"path":"https://queelius.github.io/algebraic.mle/articles/weibull-mle.html","id":"visualizing-the-data","dir":"Articles","previous_headings":"","what":"Visualizing the data","title":"Analysis of simple time series data","text":"Visualizing data good first step analysis data. data univariate bivariate, can plot histogram data pretty easily (’s multivariate, can plot marginal distributions data). show histogram simulated data :","code":""},{"path":"https://queelius.github.io/algebraic.mle/articles/weibull-mle.html","id":"parametrically-modeling-the-data","dir":"Articles","previous_headings":"","what":"Parametrically modeling the data","title":"Analysis of simple time series data","text":"sample, might conclude? can difficult problem. case, know simulated data drawn distribution \\(T_i = W_i + \\epsilon_i\\) \\[   W_i \\sim \\operatorname{weibull}(\\lambda = 5,                                 k = 3) \\] \\[   \\epsilon_i \\sim \\operatorname{normal}(\\mu=0,\\sigma=0.05). \\] However, real-world data sets, know distribution. , let us suppose know true distribution data. interested , say, prediction, sufficiently large sample, use non-parametric methods “let data speak .” However, interested inference (e.g., explaining data) sample small, need make assumptions data. case, assume data drawn parametric distribution. many well-known, named parametric distributions, e.g., Pareto, Weibull, Normal, name . experience, seems like Weibull normal might good fits data. However, note since normal distribution permits negative values realized, may appropriate choice. Still, since approximations anyway, may big deal. First, let us fit Weibull distribution choosing appropriate shape \\(\\lambda\\) scale \\(k\\) parameters using maximum likelihood estimator. find MLE \\(\\theta = (\\lambda,k)'\\), need log-likelihood function l.wei, given following R code: MLE point \\((\\hat\\lambda,\\hat k)'\\) maximum loglikelihood function, l.wei, parameter’s domain. may use root-finding algorithm known Newton-Raphson method find gradient log-likelihood function l.wei zero. Newton-raphson code: Newton-Raphson function conventionally used minimize function. ’re trying maximize log-likelihood function l.wei, ’re trying minimize negative log-likelihood. Thus, gradient Hessian given negative . ’s code: gradient approximately zero MLE. Hessian also useful, since asymptotically MLE follows normal distribution mean given true parameter variance-covariance given negative inverse Hessian. implemented precise efficient algorithms computing MLE Weibull distribution algebraic.mle R package. function, mle_weibull_shape_scale, returns mle object, API provides number conventient methods, estimating variance-covariance matrix, confidence intervals, bias, . ’s code: Let’s normal distribution. simply use mle_normal_mu_var function algebraic.mle package: Let’s plot pdfs Weibull normal distributions:  black, true density. green, Weibull density. red, normal density. plot, ’s hard tell distribution better fit DGP. choose Weibull normal distribution? discuss next section.","code":"l.wei <- function(theta) sum(dweibull(sim.df$lifetime,                                       shape=theta[1],                                       scale=theta[2],                                       log=T)) newton_raphson <- function(f, df, x0, tol=1e-4, maxiter=100L) {   fx <- f(x0)   for (i in 1:maxiter)   {     if (max(abs(fx)) < tol) break     J <- df(x0)     d <- solve(J,fx)     x0 <- x0 - d     fx <- f(x0)   }   x0 } newton_raphson(     f=function(theta) -grad(l.wei,theta),     df=function(theta) -hessian(l.wei,theta),     x0=sim.theta) #> [1] 6.140381 3.034467 library(algebraic.mle) mle.wei <- mle_weibull_shape_scale(sim.df$lifetime) summary(mle.wei) #> Maximum likelihood estimator of type mle_weibull_shape_scale is normally distributed. #> The estimates of the parameters are given by: #>    shape    scale  #> 6.140382 3.034467  #> The fisher information matrix (FIM) is given by: #>          shape     scale #> shape  2.91748  18.65922 #> scale 18.65922 314.84968 #> The variance-covariance matrix of the estimator is given by: #>             shape        scale #> shape  0.55197963 -0.032712474 #> scale -0.03271247  0.005114788 #> The asymptotic 95% confidence interval of the parameters are given by: #>           2.5%    97.5% #> shape 4.918333 7.362432 #> scale 2.916831 3.152104 #> The bias of the estimator is given by: #> [1] 0 0 #> The MSE of the estimator is  0.5570944 . #> The log-likelihood is  -44.58054 . #> The AIC is  93.16108 . #> The standard error is  0.7429533 0.07151775 . mle.norm <- mle_normal_mu_var(sim.df$lifetime) summary(mle.norm) #> Maximum likelihood estimator of type mle_normal_mu_var is normally distributed. #> The estimates of the parameters are given by: #>        mu       var  #> 2.8220016 0.2756513  #> The fisher information matrix (FIM) is given by: #>          [,1]     [,2] #> [1,] 210.4108   0.0000 #> [2,]   0.0000 381.6612 #> The variance-covariance matrix of the estimator is given by: #>             [,1]        [,2] #> [1,] 0.004752608 0.000000000 #> [2,] 0.000000000 0.002620125 #> The asymptotic 95% confidence interval of the parameters are given by: #>          2.5%     97.5% #> mu  2.7086068 2.9353964 #> var 0.1914559 0.3598466 #> The bias of the estimator is given by: #>                       var  #>  0.000000000 -0.004752608  #> The MSE of the estimator is  0.00739532 . #> The log-likelihood is  -44.92849 . #> The AIC is  93.85698 . #> The standard error is  0.06893916 0.05118715 . plot(function(x) dweibull(x,shape=point(mle.wei)[1],scale=point(mle.wei)[2]),      xlim=c(1,4.5),ylim=c(0,.82),      main=\"Densities\", col=\"green\",      xlab=\"t\", ylab=\"density\")  # overlay the normal distribution pdf on the Weibull pdf plot curve(dnorm(x,mean=point(mle.norm)[1],sd=sqrt(point(mle.norm)[2])),       add=T,col=\"red\")  lines(dgp.density, col=\"black\")"},{"path":"https://queelius.github.io/algebraic.mle/articles/weibull-mle.html","id":"goodness-of-fit","dir":"Articles","previous_headings":"","what":"Goodness of fit","title":"Analysis of simple time series data","text":"fitting model data precisely capture generative model \\(W\\). , good fit ? conduct goodness fit test, \\[\\begin{align}   H_0 &: \\text{data compatible Weibull distribution}\\\\   H_A &: \\text{data compatible Weibull distribution}. \\end{align}\\] perform test, use Cramer-von Mises test. test based Cramer-von Mises statistic, measure distance empirical distribution function data distribution function model. Cramer-von Mises statistic given \\[   \\hat D_n^2 = \\frac{1}{n}\\sum_{=1}^n \\left(\\hat F_n(x_i) - F(x_i)\\right)^2 \\] \\(\\hat F_n\\) empirical distribution function data \\(F\\) distribution function model. Looking \\(p\\)-value, see data compatible Weibull distribution. Now, let’s normal distribution: compatible data. However, Weibull distribution larger \\(p\\)-value, may suggest better fit. also AIC measure goodness fit. AIC given \\[   \\text{AIC} = -2\\log L + 2k, \\] \\(L\\) likelihood model \\(k\\) number parameters model. AIC measure tradeoff goodness fit complexity model. lower AIC value indicates better fit. Thus, according measure, Weibull distribution better fit.","code":"cramer.test <- function(obs.dat,ref.dat) {   stat <- CDFt::CramerVonMisesTwoSamples(obs.dat,ref.dat)   list(p.value=exp(-stat)/6.0,        cramer.stat=stat,        obs.size=length(obs.dat),        ref.size=length(ref.dat)) }  wei.shape <- point(mle.wei)[1] wei.scale <- point(mle.wei)[2] ref.dat <- rweibull(1000000,shape=wei.shape,scale=wei.scale) cramer.test(sim.df$lifetime,ref.dat) #> $p.value #> [1] 0.1589732 #>  #> $cramer.stat #> [1] 0.04726002 #>  #> $obs.size #> [1] 58 #>  #> $ref.size #> [1] 1000000 norm.mu <- point(mle.norm)[1] norm.var <- point(mle.norm)[2] ref.dat <- rnorm(1000000,mean=norm.mu,sd=sqrt(norm.var)) cramer.test(sim.df$lifetime,ref.dat) #> $p.value #> [1] 0.1569756 #>  #> $cramer.stat #> [1] 0.05990535 #>  #> $obs.size #> [1] 58 #>  #> $ref.size #> [1] 1000000 aic(mle.wei) #> [1] 93.16108 aic(mle.norm) #>      var  #> 93.85698"},{"path":"https://queelius.github.io/algebraic.mle/articles/weibull-mle.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Analysis of simple time series data","text":"post, shown fit Weibull distribution data. also shown fit normal distribution data. shown compare two models using Cramer-von Mises test AIC measure goodness fit. came definitive conclusion model better, Weibull distribution larger \\(p\\)-value Cramer-von Mises test, lower AIC value. Thus, may better fit, see true DGP visually different Weibull normal distributions. Notably, DGP longer tails , suggesting even better fit may long-tail distribution like log-normal Pareto distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Towell. Author, maintainer.","code":""},{"path":"https://queelius.github.io/algebraic.mle/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Towell (2023). algebraic.mle: Algebraic Maximum Likelihood Estimators. https://github.com/queelius/algebraic.mle, https://queelius.github.io/algebraic.mle/.","code":"@Manual{,   title = {algebraic.mle: Algebraic Maximum Likelihood Estimators},   author = {Alexander Towell},   year = {2023},   note = {https://github.com/queelius/algebraic.mle, https://queelius.github.io/algebraic.mle/}, }"},{"path":"https://queelius.github.io/algebraic.mle/index.html","id":"r-package-algebraicmle","dir":"","previous_headings":"","what":"Algebraic Maximum Likelihood Estimators","title":"Algebraic Maximum Likelihood Estimators","text":"algebra maximum likelihood estimators (MLE). MLEs many desirable, well-defined statistical properties. define algebra MLEs.","code":""},{"path":"https://queelius.github.io/algebraic.mle/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Algebraic Maximum Likelihood Estimators","text":"can install algebraic.mle GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"queelius/algebraic.mle\")"},{"path":"https://queelius.github.io/algebraic.mle/index.html","id":"api","dir":"","previous_headings":"","what":"API","title":"Algebraic Maximum Likelihood Estimators","text":"object representing fitted model type mle object, maximum likelihood estimator model respect observed data. API mostly consists generic methods implementations various mle type objects. full list functions, see function reference algebraic.mle. Let’s fit conditional exponential model data. model, Y | x ~ EXP(rate(x)) rate(x) = exp(b0 + b1*x). First, let’s create DGP (data generating process): Let’s generate date: Now, define two functions, resp, rate, loglik function used define model. Let’s fit model. ’ll use optim function stats fit model wrap mle object using mle_numerical. Let’s plot :  can see tutorials examples using package vignettes.","code":"dgp <- function(n, x, b0, b1) {     rate <- exp(b0 + b1 * x)     rexp(n, rate) } n <- 200 b0 <- -5 b1 <- .5 df <- data.frame(x = rep(NA, n), y = rep(NA, n)) for (i in 1:n) {     x <- runif(1, -10, 10)     y <- dgp(n = 1, x = x, b0 = b0, b1 = b1)     df[i, ] <- c(x, y) } resp <- function(df) df$y rate <- function(df, beta) exp(beta[1] + beta[2] * df$x) loglike <- function(df, resp, rate) {   function(beta) sum(dexp(x = resp(df), rate = rate(df, beta), log = TRUE)) } library(algebraic.mle) sol <- mle_numerical(optim(par = c(0, 0),     fn = loglike(df, resp, rate),     control = list(fnscale = -1),     hessian = TRUE)) summary(sol) #> Maximum likelihood estimator of type mle_numerical is normally distributed. #> The estimates of the parameters are given by: #> [1] -5.0550451  0.5024231 #> The standard error is  0.07084016 0.01189676 . #> The asymptotic 95% confidence interval of the parameters are given by: #>              2.5%      97.5% #> param1 -5.1715668 -4.9385234 #> param2  0.4828547  0.5219916 #> The MSE of the estimator is  0.005159861 . #> The log-likelihood is  -1204.952 . #> The AIC is  2413.903 . # plot the x-y points from the data frame plot(df$x,df$y)  # now overlay a plot of the conditional mean x <- seq(-10, 10, .1) b0.hat <- point(sol)[1] b1.hat <- point(sol)[2] y.hat <- 1/exp(b0.hat + b1.hat*x) y <- 1/exp(b0 + b1*x) lines(x, y, col = \"green\", lwd = 10) lines(x, y.hat, col = \"blue\", lwd = 10)"},{"path":"https://queelius.github.io/algebraic.mle/reference/aic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic method for obtaining the AIC of a fitted distribution object fit. — aic","title":"Generic method for obtaining the AIC of a fitted distribution object fit. — aic","text":"Generic method obtaining AIC fitted distribution object fit.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/aic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic method for obtaining the AIC of a fitted distribution object fit. — aic","text":"","code":"aic(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/aic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic method for obtaining the AIC of a fitted distribution object fit. — aic","text":"x object obtain AIC ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/aic.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the AIC of an `mle` object. — aic.mle","title":"Method for obtaining the AIC of an `mle` object. — aic.mle","text":"Method obtaining AIC `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/aic.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the AIC of an `mle` object. — aic.mle","text":"","code":"# S3 method for mle aic(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/aic.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the AIC of an `mle` object. — aic.mle","text":"x `mle` object obtain AIC ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/algebraic.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"`algebraic.mle`: A package for algebraically operating on and generating\nmaximum likelihood estimators from existing maximum likelihood estimators. — algebraic.mle","title":"`algebraic.mle`: A package for algebraically operating on and generating\nmaximum likelihood estimators from existing maximum likelihood estimators. — algebraic.mle","text":"object representing fitted model type `mle` object, maximum likelihood estimator model respect observed data.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/algebraic.mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"`algebraic.mle`: A package for algebraically operating on and generating\nmaximum likelihood estimators from existing maximum likelihood estimators. — algebraic.mle","text":"relatively rich API working objects help understand MLE estimator.#'","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the estimate of the bias of a boot object. — bias.boot","title":"Computes the estimate of the bias of a boot object. — bias.boot","text":"Computes estimate bias boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the estimate of the bias of a boot object. — bias.boot","text":"","code":"# S3 method for boot bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the estimate of the bias of a boot object. — bias.boot","text":"x boot object compute bias . par true parameter value known, may provide ; otherwise use MLE par. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the bias of an estimator object. — bias","title":"Computes the bias of an estimator object. — bias","text":"Computes bias estimator object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the bias of an estimator object. — bias","text":"","code":"bias(x, theta, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the bias of an estimator object. — bias","text":"x object compute bias . theta true parameter value. usually, unknown (NULL), case estimate bias ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the bias of an estimator object. — bias","text":"bias estimator. return type depends specific         method.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the bias of an `mle` object assuming the large sample\napproximation is valid and the MLE regularity conditions are satisfied.\nIn this case, the bias is zero (or zero vector). — bias.mle","title":"Computes the bias of an `mle` object assuming the large sample\napproximation is valid and the MLE regularity conditions are satisfied.\nIn this case, the bias is zero (or zero vector). — bias.mle","text":"good estimate bias general, arguably better returning `NULL`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the bias of an `mle` object assuming the large sample\napproximation is valid and the MLE regularity conditions are satisfied.\nIn this case, the bias is zero (or zero vector). — bias.mle","text":"","code":"# S3 method for mle bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the bias of an `mle` object assuming the large sample\napproximation is valid and the MLE regularity conditions are satisfied.\nIn this case, the bias is zero (or zero vector). — bias.mle","text":"x `mle` object compute bias . par true parameter value. normally, unknown (NULL), case estimate bias (say, using bootstrap) ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the estimate of the bias of a `mle_boot` object. — bias.mle_boot","title":"Computes the estimate of the bias of a `mle_boot` object. — bias.mle_boot","text":"Generally, trust good estimate bias MLE estimator, still useful comparing different estimators.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the estimate of the bias of a `mle_boot` object. — bias.mle_boot","text":"","code":"# S3 method for mle_boot bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the estimate of the bias of a `mle_boot` object. — bias.mle_boot","text":"x `mle_boot` object compute bias . par true parameter value known, may provide ; otherwise use MLE `par`. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Bias of an Exponential MLE — bias.mle_exp","title":"Computes the Bias of an Exponential MLE — bias.mle_exp","text":"function computes bias Maximum Likelihood Estimator (MLE) rate parameter Exponential distribution. bias `1/(nobs(x)-1)*par` `x` `mle_exp` object `par` true rate parameter. `par` provided, point estimate `x` used estimate bias.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Bias of an Exponential MLE — bias.mle_exp","text":"","code":"# S3 method for mle_exp bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Bias of an Exponential MLE — bias.mle_exp","text":"x `mle_exp` object compute bias. par numeric value representing true rate parameter. NULL, point estimate `x` used. ... additional arguments (used).","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the Bias of an Exponential MLE — bias.mle_exp","text":"Returns named numeric value representing estimated bias rate parameter.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the Bias of an Exponential MLE — bias.mle_exp","text":"","code":"if (FALSE) {   obs <- rexp(100, rate = 0.5)   rate.hat <- mle_exp(obs)   print(bias(rate.hat, par = 0.5)) }"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the bias of an `exp_mle` object (exponential mle). — bias.mle_exp_rate","title":"Computes the bias of an `exp_mle` object (exponential mle). — bias.mle_exp_rate","text":"unbiased estimator rate parameter exponential distribution given : `1/(nobs(x)-1)*bias(x)`, `x` `mle_exp_rate` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the bias of an `exp_mle` object (exponential mle). — bias.mle_exp_rate","text":"","code":"# S3 method for mle_exp_rate bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_exp_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the bias of an `exp_mle` object (exponential mle). — bias.mle_exp_rate","text":"x `mle_exp_rate` object compute bias . par true rate parameter value. Usually, rate known, estimate bias ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the bias of an `mle_normal` object. — bias.mle_normal","title":"Computes the bias of an `mle_normal` object. — bias.mle_normal","text":"function computes bias `mle_normal` object. method generic function `bias`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the bias of an `mle_normal` object. — bias.mle_normal","text":"","code":"# S3 method for mle_normal bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the bias of an `mle_normal` object. — bias.mle_normal","text":"x `mle_normal` object (subclass `mle`) compute bias . par true parameter value. unknown (NULL), bias estimated. ... Additional arguments (currently unused).","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the bias of an `mle_normal` object. — bias.mle_normal","text":"numeric vector length 2, bias `mle_normal` estimator.","code":""},{"path":[]},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal_mu_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the bias of an `mle_normal_mu_var` object. — bias.mle_normal_mu_var","title":"Computes the bias of an `mle_normal_mu_var` object. — bias.mle_normal_mu_var","text":"Computes bias `mle_normal_mu_var` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal_mu_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the bias of an `mle_normal_mu_var` object. — bias.mle_normal_mu_var","text":"","code":"# S3 method for mle_normal_mu_var bias(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/bias.mle_normal_mu_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the bias of an `mle_normal_mu_var` object. — bias.mle_normal_mu_var","text":"x `mle` object compute bias . par true parameter value, defaults unknown (NULL) ... unused additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/chisqr.test.html","id":null,"dir":"Reference","previous_headings":"","what":"chi-squar goodness-of-fit test — chisqr.test","title":"chi-squar goodness-of-fit test — chisqr.test","text":"chi-squar goodness--fit test","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/chisqr.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"chi-squar goodness-of-fit test — chisqr.test","text":"","code":"chisqr.test(obs, cdf, options = list(), ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/chisqr.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"chi-squar goodness-of-fit test — chisqr.test","text":"obs sample observations cdf cdf reference distribution options list options pass test function ... additional arguments pass breaks number breaks use histogram rescale.p logical, whether rescale p-value simulate.p.value logical, whether simulate p-value nbreaks number breaks use histogram","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/chisqr.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"chi-squar goodness-of-fit test — chisqr.test","text":"hypothesis test object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/confint.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the confidence intervals of mle objects. — confint.boot","title":"Function to compute the confidence intervals of mle objects. — confint.boot","text":"Function compute confidence intervals mle objects.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/confint.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the confidence intervals of mle objects. — confint.boot","text":"","code":"# S3 method for boot confint(object, parm = NULL, level = 0.95, type = \"perc\", ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/confint.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the confidence intervals of mle objects. — confint.boot","text":"object boot object compute confidence intervals parm parameter indexes compute confidence intervals , defaults . NOTE: implemented ignored now. level confidence level, defaults 0.95 (alpha=.05) type vector character strings representing type intervals required. value subset values c(\"norm\",\"basic\", \"stud\", \"perc\", \"bca\") simply \"\". ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/confint.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the confidence intervals of `mle` objects. — confint.mle","title":"Function to compute the confidence intervals of `mle` objects. — confint.mle","text":"Function compute confidence intervals `mle` objects.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/confint.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the confidence intervals of `mle` objects. — confint.mle","text":"","code":"# S3 method for mle confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/confint.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the confidence intervals of `mle` objects. — confint.mle","text":"object `mle` object compute confidence intervals parm parameter indexes compute confidence intervals , defaults level confidence level, defaults 0.95 (alpha=.05) ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/cramer.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Cramer Von Mises hypothesis test — cramer.test","title":"Cramer Von Mises hypothesis test — cramer.test","text":"Cramer Von Mises hypothesis test","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/cramer.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cramer Von Mises hypothesis test — cramer.test","text":"","code":"cramer.test(obs, ref)"},{"path":"https://queelius.github.io/algebraic.mle/reference/cramer.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cramer Von Mises hypothesis test — cramer.test","text":"obs sample observations ref sample reference distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/cramer.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cramer Von Mises hypothesis test — cramer.test","text":"hypothesis test object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_conditional_rate_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Likelihood Function Generator for the Exponential Distribution\nwith a rate parameter that is a function of predictors in `df`, — exp_conditional_rate_loglike","title":"Log-Likelihood Function Generator for the Exponential Distribution\nwith a rate parameter that is a function of predictors in `df`, — exp_conditional_rate_loglike","text":"`resp(df) ~ exp(rate(df, beta))`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_conditional_rate_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Likelihood Function Generator for the Exponential Distribution\nwith a rate parameter that is a function of predictors in `df`, — exp_conditional_rate_loglike","text":"","code":"exp_conditional_rate_loglike(df, resp, rate)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_conditional_rate_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Likelihood Function Generator for the Exponential Distribution\nwith a rate parameter that is a function of predictors in `df`, — exp_conditional_rate_loglike","text":"df numeric vector representing sample observations. resp function returns response variable given row data frame. rate function returns rate given row data frame parameter vector `beta`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_conditional_rate_loglike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Likelihood Function Generator for the Exponential Distribution\nwith a rate parameter that is a function of predictors in `df`, — exp_conditional_rate_loglike","text":"Returns function computes conditional log-likelihood         `df`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_conditional_rate_loglike.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-Likelihood Function Generator for the Exponential Distribution\nwith a rate parameter that is a function of predictors in `df`, — exp_conditional_rate_loglike","text":"`beta` vector parameters. function returned function suitable use `optim` `nlm` find maximum likelihood estimate `beta`. Note expected value `1/rate(...)`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_fim.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher Information Function Generator for the Exponential Distribution — exp_fim","title":"Fisher Information Function Generator for the Exponential Distribution — exp_fim","text":"function returns function rate parameter computes Fisher Information given data assuming Exponential distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_fim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher Information Function Generator for the Exponential Distribution — exp_fim","text":"","code":"exp_fim(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_fim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher Information Function Generator for the Exponential Distribution — exp_fim","text":"x numeric vector representing sample observations.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_fim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher Information Function Generator for the Exponential Distribution — exp_fim","text":"Returns function computes Fisher Information `x` given         rate parameter.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Likelihood Function Generator for the Exponential Distribution — exp_loglike","title":"Log-Likelihood Function Generator for the Exponential Distribution — exp_loglike","text":"function returns function rate parameter computes log-likelihood given data assuming Exponential distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Likelihood Function Generator for the Exponential Distribution — exp_loglike","text":"","code":"exp_loglike(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Likelihood Function Generator for the Exponential Distribution — exp_loglike","text":"x numeric vector representing sample observations.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_loglike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Likelihood Function Generator for the Exponential Distribution — exp_loglike","text":"Returns function computes log-likelihood `x` given         rate parameter.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_loglike.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-Likelihood Function Generator for the Exponential Distribution — exp_loglike","text":"","code":"if (FALSE) {   obs <- rexp(100, rate = 0.5)   loglike <- exp_loglike(obs)   plot(loglike, from = 0, to = 2) }"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_fisher_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher information function generator for the exponential\ndistribution — exp_rate_fisher_info","title":"Fisher information function generator for the exponential\ndistribution — exp_rate_fisher_info","text":"Fisher information function generator exponential distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_fisher_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher information function generator for the exponential\ndistribution — exp_rate_fisher_info","text":"","code":"exp_rate_fisher_info(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_fisher_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher information function generator for the exponential\ndistribution — exp_rate_fisher_info","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood function generator given data `x` for the exponential\ndistribution — exp_rate_loglike","title":"log-likelihood function generator given data `x` for the exponential\ndistribution — exp_rate_loglike","text":"log-likelihood function generator given data `x` exponential distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood function generator given data `x` for the exponential\ndistribution — exp_rate_loglike","text":"","code":"exp_rate_loglike(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood function generator given data `x` for the exponential\ndistribution — exp_rate_loglike","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_score.html","id":null,"dir":"Reference","previous_headings":"","what":"score (derivative of log-likelihood) function generator given data `x`\nfor the exponential distribution — exp_rate_score","title":"score (derivative of log-likelihood) function generator given data `x`\nfor the exponential distribution — exp_rate_score","text":"score (derivative log-likelihood) function generator given data `x` exponential distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"score (derivative of log-likelihood) function generator given data `x`\nfor the exponential distribution — exp_rate_score","text":"","code":"exp_rate_score(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_rate_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"score (derivative of log-likelihood) function generator given data `x`\nfor the exponential distribution — exp_rate_score","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score Function Generator for the Exponential Distribution — exp_score","title":"Score Function Generator for the Exponential Distribution — exp_score","text":"function returns function rate parameter computes score (derivative log-likelihood) given data assuming Exponential distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score Function Generator for the Exponential Distribution — exp_score","text":"","code":"exp_score(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score Function Generator for the Exponential Distribution — exp_score","text":"x numeric vector representing sample observations.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/exp_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score Function Generator for the Exponential Distribution — exp_score","text":"Returns function computes score `x` given rate         parameter.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic method for obtaining the fisher information\nmatrix of an `mle` object. — fim","title":"Generic method for obtaining the fisher information\nmatrix of an `mle` object. — fim","text":"Fisher information way measuring amount information observable random variable `X` carries unknown parameter `theta` upon probability `X` depends.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic method for obtaining the fisher information\nmatrix of an `mle` object. — fim","text":"","code":"fim(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic method for obtaining the fisher information\nmatrix of an `mle` object. — fim","text":"x object obtain fisher information ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic method for obtaining the fisher information\nmatrix of an `mle` object. — fim","text":"inverse Fisher information matrix variance-covariance MLE `theta`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining the fisher information matrix of an `mle` object. — fim.mle","title":"Function for obtaining the fisher information matrix of an `mle` object. — fim.mle","text":"Function obtaining fisher information matrix `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining the fisher information matrix of an `mle` object. — fim.mle","text":"","code":"# S3 method for mle fim(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining the fisher information matrix of an `mle` object. — fim.mle","text":"x `mle` object obtain fisher information . ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the variance-covariance matrix of `boot` object. — fim.mle_boot","title":"Computes the variance-covariance matrix of `boot` object. — fim.mle_boot","text":"Computes variance-covariance matrix `boot` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the variance-covariance matrix of `boot` object. — fim.mle_boot","text":"","code":"# S3 method for mle_boot fim(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/fim.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the variance-covariance matrix of `boot` object. — fim.mle_boot","text":"object `boot` object obtain variance-covariance ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic method for obtaining the fisher information\nmatrix of an mle object. — fisher_info","title":"Generic method for obtaining the fisher information\nmatrix of an mle object. — fisher_info","text":"Fisher information way measuring amount information observable random variable `X` carries unknown parameter theta upon probability `X` depends.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic method for obtaining the fisher information\nmatrix of an mle object. — fisher_info","text":"","code":"fisher_info(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic method for obtaining the fisher information\nmatrix of an mle object. — fisher_info","text":"x object obtain fisher information ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic method for obtaining the fisher information\nmatrix of an mle object. — fisher_info","text":"inverse Fisher information matrix variance-covariance MLE theta.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining the fisher information matrix of an mle object. — fisher_info.mle","title":"Function for obtaining the fisher information matrix of an mle object. — fisher_info.mle","text":"Function obtaining fisher information matrix mle object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining the fisher information matrix of an mle object. — fisher_info.mle","text":"","code":"# S3 method for mle fisher_info(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/fisher_info.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining the fisher information matrix of an mle object. — fisher_info.mle","text":"x mle object obtain fisher information . ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/is_converged.html","id":null,"dir":"Reference","previous_headings":"","what":"is_converged — is_converged","title":"is_converged — is_converged","text":"Function determine whether `mle` object converged.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/is_converged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_converged — is_converged","text":"","code":"is_converged(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/is_converged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_converged — is_converged","text":"x `mle` object ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/is_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if an object `x` is an `mle` object. — is_mle","title":"Determine if an object `x` is an `mle` object. — is_mle","text":"Determine object `x` `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/is_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if an object `x` is an `mle` object. — is_mle","text":"","code":"is_mle(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/is_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if an object `x` is an `mle` object. — is_mle","text":"x object test","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic method for obtaining the log-likelihood of fitted distribution\nobject, assuming it has a likelihood function, e.g., a fitted `mle` object. — loglike","title":"Generic method for obtaining the log-likelihood of fitted distribution\nobject, assuming it has a likelihood function, e.g., a fitted `mle` object. — loglike","text":"Generic method obtaining log-likelihood fitted distribution object, assuming likelihood function, e.g., fitted `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic method for obtaining the log-likelihood of fitted distribution\nobject, assuming it has a likelihood function, e.g., a fitted `mle` object. — loglike","text":"","code":"loglike(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic method for obtaining the log-likelihood of fitted distribution\nobject, assuming it has a likelihood function, e.g., a fitted `mle` object. — loglike","text":"x object obtain log-likelihood ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/loglike.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the log-likelihood of an `mle` object. — loglike.mle","title":"Method for obtaining the log-likelihood of an `mle` object. — loglike.mle","text":"Method obtaining log-likelihood `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/loglike.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the log-likelihood of an `mle` object. — loglike.mle","text":"","code":"# S3 method for mle loglike(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/loglike.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the log-likelihood of an `mle` object. — loglike.mle","text":"x log-likelihood `l` evaluated `x`, `l(x)`. ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/make_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"make_mle makes an mle object. — make_mle","title":"make_mle makes an mle object. — make_mle","text":"make_mle makes mle object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/make_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_mle makes an mle object. — make_mle","text":"","code":"make_mle(   theta.hat,   loglike = NULL,   score = NULL,   sigma = NULL,   info = NULL,   obs = NULL,   sample_size = NULL,   superclasses = NULL )"},{"path":"https://queelius.github.io/algebraic.mle/reference/make_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_mle makes an mle object. — make_mle","text":"theta.hat MLE loglike log-likelihood theta.hat given data score score function evaluated theta.hat sigma variance-covariance matrix theta.hat given data info information matrix theta.hat given data obs observation (sample) data sample_size number observations obs superclasses class hierarchy, mle base","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle.html","id":null,"dir":"Reference","previous_headings":"","what":"`mle` makes an `mle` object. — mle","title":"`mle` makes an `mle` object. — mle","text":"`mle` makes `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"`mle` makes an `mle` object. — mle","text":"","code":"mle(   theta.hat,   loglike = NULL,   score = NULL,   sigma = NULL,   info = NULL,   obs = NULL,   nobs = NULL,   superclasses = NULL )"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"`mle` makes an `mle` object. — mle","text":"theta.hat MLE loglike log-likelihood `theta.hat` given data score score function evaluated `theta.hat` sigma variance-covariance matrix `theta.hat` given data info information matrix `theta.hat` given data obs observation (sample) data nobs number observations `obs` superclasses class (classes) `mle` base","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"rmap.mle computes the distribution of f(x) where x\nis an mle object. — mle_apply","title":"rmap.mle computes the distribution of f(x) where x\nis an mle object. — mle_apply","text":"invariance property MLE, x mle object, right conditions, asymptotically, f(x) normally distributed approximation given f(x) ~ normal(f(point(x)),sigma) sigma variance-covariance f(x), e.g., sample covariance f(x1),...f(xn) xj sampled sampler(x).","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rmap.mle computes the distribution of f(x) where x\nis an mle object. — mle_apply","text":"","code":"mle_apply(x, g, method = \"delta\", keep_obs = F)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rmap.mle computes the distribution of f(x) where x\nis an mle object. — mle_apply","text":"x mle object. g function accepts objects like point(x).","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rmap.mle computes the distribution of f(x) where x\nis an mle object. — mle_apply","text":"delta method bootstrap method monte carlo method","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap MLE — mle_boot","title":"Bootstrap MLE — mle_boot","text":"Sometimes, large sample asymptotic theory MLEs applicable. cases, can use bootstrap estimate sampling distribution MLE. Look `boot` package information bootstrap use . can pass additional arguments `boot` function using `...` argument `mle_boot`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap MLE — mle_boot","text":"","code":"mle_boot(mle_solver, data, R = 999, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap MLE — mle_boot","text":"mle_solver given data, find MLE. data data resampling, resample generate MLE R bootstrap replicates, defaults 999 ... additional arguments pass.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap MLE — mle_boot","text":"`mle_boot` object, `mle` object `boot` object parent.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap MLE — mle_boot","text":"","code":"data <- rnorm(15) solver <- function(data, ind) {     point(mle_normal_mu_var(data[ind])) } mle_boot(solver, data, 1000) #> Error in mle_normal_mu_var(data[ind]): could not find function \"mle_normal_mu_var\""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for computing the sampling distribution of a statistic of the\nMLE's sampling distribution using the Bootstrap method. — mle_boot_loglike","title":"A function for computing the sampling distribution of a statistic of the\nMLE's sampling distribution using the Bootstrap method. — mle_boot_loglike","text":"function computing sampling distribution statistic MLE's sampling distribution using Bootstrap method.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for computing the sampling distribution of a statistic of the\nMLE's sampling distribution using the Bootstrap method. — mle_boot_loglike","text":"","code":"mle_boot_loglike(   mle,   loglike.gen,   data = NULL,   R = NULL,   method = mle_newton_raphson,   ... )"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_boot_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for computing the sampling distribution of a statistic of the\nMLE's sampling distribution using the Bootstrap method. — mle_boot_loglike","text":"mle fitted mle object. loglike.gen generator log-likelihood function; accepts observations constructs log-likelihood function data data generating MLEs bootstrap resampling. R bootstrap replicates method method solving MLE, defaults numerically solving root gradient log-likelihood using Newton-raphson. ... additional arguments pass.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Likelihood Estimation (MLE) for the Exponential Distribution — mle_exp","title":"Maximum Likelihood Estimation (MLE) for the Exponential Distribution — mle_exp","text":"function computes Maximum Likelihood Estimation (MLE) rate parameter given sample assumed independently identically distributed (..d) drawn Exponential distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Likelihood Estimation (MLE) for the Exponential Distribution — mle_exp","text":"","code":"mle_exp(x, keep_obs = FALSE)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Likelihood Estimation (MLE) for the Exponential Distribution — mle_exp","text":"x numeric vector representing sample observations. keep_obs logical. TRUE, observations stored `mle` object. Default FALSE.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Likelihood Estimation (MLE) for the Exponential Distribution — mle_exp","text":"Returns `mle` object contains:","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Likelihood Estimation (MLE) for the Exponential Distribution — mle_exp","text":"","code":"if (FALSE) {   obs <- rexp(100, rate = 0.5)   rate.hat <- mle_exp(obs)   summary(rate.hat) }"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the exponential distribution. — mle_exp_rate","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the exponential distribution. — mle_exp_rate","text":"course, draws unlikely exponential, exponential may sufficiently good model. Hypothesis testing, relative likelihoods, can used assess appropriateness exponential model data.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the exponential distribution. — mle_exp_rate","text":"","code":"mle_exp_rate(x, keep_obs = F)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the exponential distribution. — mle_exp_rate","text":"x sample observations keep_obs store observations `mle` object, default `F`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_exp_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the exponential distribution. — mle_exp_rate","text":"`mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_gradient_ascent.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_gradient_ascent — mle_gradient_ascent","title":"mle_gradient_ascent — mle_gradient_ascent","text":"MLE method using gradient ascent","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_gradient_ascent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_gradient_ascent — mle_gradient_ascent","text":"","code":"mle_gradient_ascent(ll, theta0, score, options)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_gradient_ascent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_gradient_ascent — mle_gradient_ascent","text":"ll log-likelihood function theta0 initial guess theta `p` components score score function type `R^p -> R^p`, gradient `ll`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_iterative.html","id":null,"dir":"Reference","previous_headings":"","what":"General iterative MLE method — mle_iterative","title":"General iterative MLE method — mle_iterative","text":"General iterative MLE method","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_iterative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General iterative MLE method — mle_iterative","text":"","code":"mle_iterative(   l,   theta0,   dir = NULL,   eps = 1e-05,   sup = NULL,   eta = 1,   r = 0.5,   max_iter = 0L,   debug = F )"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_iterative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General iterative MLE method — mle_iterative","text":"l log-likelihood function type \\(R^p \\mapsto R\\) theta0 initial guess \\(\\theta\\) \\(p\\) components dir promising direction function type \\(R^p \\mapsto R^p\\) sup domain support function type \\(R^p \\mapsto \\{T,F\\}\\) log-likelihood function \\(l\\) eta learning rate, defaults 1 r backing tracking parameter max_iter maximum number iterations debug Boolean, output debugging information TRUE; defaults FALSE stop_cond stopping condition function type \\(R^p \\times R^p \\mapsto \\{T,F\\}\\)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_linear_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearly transform an mle object x by multiplying it\non the LHS by a matrix A. — mle_linear_transform","title":"Linearly transform an mle object x by multiplying it\non the LHS by a matrix A. — mle_linear_transform","text":"Linearly transform mle object x multiplying LHS matrix .","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_linear_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly transform an mle object x by multiplying it\non the LHS by a matrix A. — mle_linear_transform","text":"","code":"mle_linear_transform(A, x, b = NULL)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_linear_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly transform an mle object x by multiplying it\non the LHS by a matrix A. — mle_linear_transform","text":"(non-random) matrix x mle object linearly transform b (non-random) vector, defaults `NULL` (zero vector)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_linear_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linearly transform an mle object x by multiplying it\non the LHS by a matrix A. — mle_linear_transform","text":"`mle_linear_transform` object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_local_search.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_local_search — mle_local_search","title":"mle_local_search — mle_local_search","text":"assumes MLE interior point provided initial guess `theta0` near . Use global search method like `sim_anneal` find good initial guess.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_local_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_local_search — mle_local_search","text":"","code":"mle_local_search(ll, dir, theta0, options = list())"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_local_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_local_search — mle_local_search","text":"ll function, log-likelihood function dir function, promising direction function theta0 numeric, initial guess options list, options local search, see function description.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_local_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_local_search — mle_local_search","text":"`mle` object additional attributes `iter` `converged`         optionally `path` `trace` TRUE.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_local_search.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"mle_local_search — mle_local_search","text":"mle_local_search(): options","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_local_search.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"mle_local_search — mle_local_search","text":"sup function, domain support log-likelihood eta numeric, learning rate, defaults 1 max_iter integer, maximum number iterations, defaults 1000 max_iter_ls integer, maximum number iterations line search, defaults 1000 abs_tol numeric, tolerance convergence, defaults NULL (use rel_tol instead) rel_tol numeric, relative tolerance convergence, defaults 1e-5 r numeric, backtracking line search parameter, defaults 0.8 proj function, projection function enforce domain support norm function, pass difference successive theta updates norm check convergence, defaults infinity norm. debug logical, output debugging information TRUE; default FALSE trace logical, TRUE store path search `path` attribute output; default FALSE","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_newton_raphson.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_newton_raphson — mle_newton_raphson","title":"mle_newton_raphson — mle_newton_raphson","text":"MLE method using Newton-Raphson method","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_newton_raphson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_newton_raphson — mle_newton_raphson","text":"","code":"mle_newton_raphson(ll, score, info, theta0, inverted = FALSE, options = list())"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_newton_raphson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_newton_raphson — mle_newton_raphson","text":"ll log-likelihood function score score Function, gradient log-likelihood info FIM function theta0 initial guess inverted logical, TRUE `info` covariance instead FIM options list, options local search, see `mle_local_search`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_newton_raphson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_newton_raphson — mle_newton_raphson","text":"object class `mle_newton_raphson`, `mle` object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal","text":"course, draws unlikely normal, normal distribution often good model. Hypothesis testing, relative likelihoods, can used assess appropriateness normal model data.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal","text":"","code":"mle_normal(x, keep_obs = TRUE)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal","text":"x sample observations keep_obs whether store observations `mle_normal` object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal","text":"`mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal_mu_var.html","id":null,"dir":"Reference","previous_headings":"","what":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal_mu_var","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal_mu_var","text":"course, draws unlikely normal, normal distribution often good model. Hypothesis testing, relative likelihoods, can used assess appropriateness normal model data.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal_mu_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal_mu_var","text":"","code":"mle_normal_mu_var(x, keep_obs = T)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal_mu_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal_mu_var","text":"x sample observations keep_obs whether store observations `mle_normal_mu_var` object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_normal_mu_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MLE of the (mu,var) parameter vector when we assume the sample is i.i.d. and\ndrawn from the normal distribution. — mle_normal_mu_var","text":"`mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_numerical.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_optim — mle_numerical","title":"mle_optim — mle_numerical","text":"function takes output `optim`, `newton_raphson`, `sim_anneal` turns `mle_numerical` (subclass `mle`) object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_numerical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_optim — mle_numerical","text":"","code":"mle_numerical(sol, options = list(), superclasses = NULL)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_numerical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_optim — mle_numerical","text":"sol output `optim` `newton_raphson` options list, options things like sigma FIM","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_numerical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_optim — mle_numerical","text":"`numerical_mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_optim.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_optim — mle_optim","title":"mle_optim — mle_optim","text":"function takes output `optim` turns `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_optim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_optim — mle_optim","text":"","code":"mle_optim(sol)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_optim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_optim — mle_optim","text":"sol output `optim`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_optim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_optim — mle_optim","text":"`numerical_mle` object, specialized `optim` (stats package) solutions.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_solver_random_restarts.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterative MLE method using gradient ascent — mle_solver_random_restarts","title":"Iterative MLE method using gradient ascent — mle_solver_random_restarts","text":"Iterative MLE method using gradient ascent","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_solver_random_restarts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterative MLE method using gradient ascent — mle_solver_random_restarts","text":"","code":"mle_solver_random_restarts(mle_solver, start_gen, trials = 10)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_solver_random_restarts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterative MLE method using gradient ascent — mle_solver_random_restarts","text":"mle_solver MLE solver, takes starting point start_gen starting point generator trials number trials run","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull","text":"MLE rate parameter assume sample ..d. drawn weibull distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull","text":"","code":"mle_weibull(   x,   par0 = c(1, 1),   pgtol = 1e-07,   maxit = 10000L,   keep_obs = FALSE,   ... )"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull","text":"x sample observations par0 initial estimate parameters, defaults `c(1,1)` pgtol convergence tolerance optimization algorithm keep_obs Boolean, specifies whether keep observations","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull","text":"`mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull_shape_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull_shape_scale","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull_shape_scale","text":"MLE rate parameter assume sample ..d. drawn weibull distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull_shape_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull_shape_scale","text":"","code":"mle_weibull_shape_scale(x, k0 = 1, eps = 1e-07, keep_obs = F)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull_shape_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull_shape_scale","text":"x sample observations eps numerically solve MLE equation, `|old-new| <= eps` stopping condition keep_obs Boolean, specifies whether keep observations k initial estimate shape parameter k","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weibull_shape_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MLE of the rate parameter when we assume the sample is i.i.d. and drawn\nfrom the weibull distribution. — mle_weibull_shape_scale","text":"`mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Accepts a list of `mle` objects for some parameter, say `theta`,\nand combines them into a single estimator `mle_weighted`. — mle_weighted","title":"Accepts a list of `mle` objects for some parameter, say `theta`,\nand combines them into a single estimator `mle_weighted`. — mle_weighted","text":"combines `mle` objects adding together, weighted inverse respective variance-covariance matrix (information matrix). Intuitively, higher variance, less weight `mle` given summation, alternatively, information parameter, weight given summation.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accepts a list of `mle` objects for some parameter, say `theta`,\nand combines them into a single estimator `mle_weighted`. — mle_weighted","text":"","code":"mle_weighted(mles)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accepts a list of `mle` objects for some parameter, say `theta`,\nand combines them into a single estimator `mle_weighted`. — mle_weighted","text":"mles list `mle` objects, parameter.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accepts a list of `mle` objects for some parameter, say `theta`,\nand combines them into a single estimator `mle_weighted`. — mle_weighted","text":"object type `mle_weighted` (inherits         `mle`) weighted sum `mle` objects.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mle_weighted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accepts a list of `mle` objects for some parameter, say `theta`,\nand combines them into a single estimator `mle_weighted`. — mle_weighted","text":"`mle` object `fim` method, returns information matrix (inverse variance-covariance matrix). assume observations used estimate MLE objects independent, might always case. case, computation log-likelihood necessarily meaningful.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the estimate of the MSE of a boot object. — mse.boot","title":"Computes the estimate of the MSE of a boot object. — mse.boot","text":"Computes estimate MSE boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the estimate of the MSE of a boot object. — mse.boot","text":"","code":"# S3 method for boot mse(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the estimate of the MSE of a boot object. — mse.boot","text":"x boot object compute MSE . par true parameter value known, may provide ; otherwise use MLE par. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for obtaining the mean squared error (MSE) of an estimator,\n`mse(x) = E[(x-mu)^2]` where `mu` is the true parameter value. — mse","title":"Generic function for obtaining the mean squared error (MSE) of an estimator,\n`mse(x) = E[(x-mu)^2]` where `mu` is the true parameter value. — mse","text":"Generic function obtaining mean squared error (MSE) estimator, `mse(x) = E[(x-mu)^2]` `mu` true parameter value.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for obtaining the mean squared error (MSE) of an estimator,\n`mse(x) = E[(x-mu)^2]` where `mu` is the true parameter value. — mse","text":"","code":"mse(x, theta)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for obtaining the mean squared error (MSE) of an estimator,\n`mse(x) = E[(x-mu)^2]` where `mu` is the true parameter value. — mse","text":"x object compute MSE theta true parameter value","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the MSE of an `mle` object. — mse.mle","title":"Computes the MSE of an `mle` object. — mse.mle","text":"MSE estimator just expected sum squared differences, e.g., true parameter value `x` estimator `x.hat`, MSE `mse(x.hat) = E[(x.hat-x)^2] = trace(vcov(x.hat)) + (bias(x.hat))^2`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the MSE of an `mle` object. — mse.mle","text":"","code":"# S3 method for mle mse(x, theta = NULL)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the MSE of an `mle` object. — mse.mle","text":"x `mle` object compute MSE . theta true parameter value","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes the MSE of an `mle` object. — mse.mle","text":"Since `x` typically known, normally must estimate bias. sufficiently large samples, MLE assuming regularity conditions, bias given `mse(x.hat) = trace(vcov(x.hat)) + bias(x.hat)^2`, `bias(x.hat)` estimate `bias(x.hat,x)`. Sometimes, can estimate bias closed form, times simulations must done, bootstrapping bias. , really large samples, since MLE asymptotically unbiased, `trace(vcov(x.hat))` may reasonable estimate MSE.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the estimate of the MSE of a `boot` object. — mse.mle_boot","title":"Computes the estimate of the MSE of a `boot` object. — mse.mle_boot","text":"Computes estimate MSE `boot` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the estimate of the MSE of a `boot` object. — mse.mle_boot","text":"","code":"# S3 method for mle_boot mse(x, par = NULL, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/mse.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the estimate of the MSE of a `boot` object. — mse.mle_boot","text":"x `boot` object compute MSE . par true parameter value known, may provide ; otherwise use MLE `par`. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":null,"dir":"Reference","previous_headings":"","what":"newton_raphson — newton_raphson","title":"newton_raphson — newton_raphson","text":"Performs Newton-Raphson find solution finds local maxima objective function `fn`. assume maxima interior point support initial guess par near local maxima.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"newton_raphson — newton_raphson","text":"","code":"newton_raphson(par, fn, gr, hess, inverted = FALSE, control = list(), ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"newton_raphson — newton_raphson","text":"par numeric, initial guess fn function, objective function maximized gr function, gradient function hess function, hessian function control list, control local search, see function description.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"newton_raphson — newton_raphson","text":"list, designed mostly consistent `optim` stats.         list elements:            `par`: best solution            `value`: function value `fn(par)`            `gr`: gradient `par`            `hess`: hessian `par`               `convergence`: convergence status, 0 converged, 1                           (consistent `optim`)            `count`: count `fn` `gr` evaluations                     (consistent `optim`)            `trace_info`: matrix trace information (optional)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"newton_raphson — newton_raphson","text":"Use global search method like `sim_anneal` find good initial guess near global maximum `fn`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"newton_raphson — newton_raphson","text":"newton_raphson(): control","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/newton_raphson.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"newton_raphson — newton_raphson","text":"eta numeric, learning rate fnscale numeric, scaling factor `fn`. negative, turns problem maximization problem. maxit integer, maximum number iterations, defaults 1000 convergence function, check convergence, defaults `||gr(par)||` `||(par1 - par0)||` approximately zero (gradient test uses absolute tolerance parameter difference test uses relative tolerance, see `abs_tol` `rel_tol`). proj function, projection function enforce domain support trace logical, keep track trace information abs_tol numeric, absolute tolerance convergence, used default `convergence` function rel_tol numeric, absolute tolerance convergence, used default `convergence` function REPORT integer, frequency tracer reports, defautls every 10 iterations","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of observations in the sample used by\nan mle. — nobs.boot","title":"Method for obtaining the number of observations in the sample used by\nan mle. — nobs.boot","text":"Method obtaining number observations sample used mle.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of observations in the sample used by\nan mle. — nobs.boot","text":"","code":"# S3 method for boot nobs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of observations in the sample used by\nan mle. — nobs.boot","text":"object mle object obtain number observations ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle","title":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle","text":"Method obtaining number observations sample used `mle`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle","text":"","code":"# S3 method for mle nobs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle","text":"object `mle` object obtain number observations ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle_boot","title":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle_boot","text":"Method obtaining number observations sample used `mle`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle_boot","text":"","code":"# S3 method for mle_boot nobs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nobs.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of observations in the sample used by\nan `mle`. — nobs.mle_boot","text":"object `mle` object obtain number observations ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fim.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fim","title":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fim","text":"Fisher information matrix generator given data `x` normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fim","text":"","code":"normal_fim(x, observed = TRUE)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fim","text":"x data (simple random sample) observed whether return observed fisher information, default `TRUE`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fisher_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher information matrix generator given data x for the normal\ndistribution — normal_fisher_info","title":"Fisher information matrix generator given data x for the normal\ndistribution — normal_fisher_info","text":"Fisher information matrix generator given data x normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fisher_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher information matrix generator given data x for the normal\ndistribution — normal_fisher_info","text":"","code":"normal_fisher_info(x, observed = T)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fisher_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher information matrix generator given data x for the normal\ndistribution — normal_fisher_info","text":"x data (simple random sample) observed whether return observed fisher information, default TRUE","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fisher_info_mu_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fisher_info_mu_var","title":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fisher_info_mu_var","text":"Fisher information matrix generator given data `x` normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fisher_info_mu_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fisher_info_mu_var","text":"","code":"normal_fisher_info_mu_var(x, observed = T)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_fisher_info_mu_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher information matrix generator given data `x` for the normal\ndistribution — normal_fisher_info_mu_var","text":"x data (simple random sample) observed whether return observed fisher information, default TRUE","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike","title":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike","text":"log-likelihood function generator given data `x` normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike","text":"","code":"normal_loglike(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_loglike_mu_var.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike_mu_var","title":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike_mu_var","text":"log-likelihood function generator given data `x` normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_loglike_mu_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike_mu_var","text":"","code":"normal_loglike_mu_var(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_loglike_mu_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood function generator given data `x` for the normal\ndistribution — normal_loglike_mu_var","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score function generator given data `x` for the normal\ndistribution — normal_score","title":"Score function generator given data `x` for the normal\ndistribution — normal_score","text":"Score function generator given data `x` normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score function generator given data `x` for the normal\ndistribution — normal_score","text":"","code":"normal_score(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score function generator given data `x` for the normal\ndistribution — normal_score","text":"x data (simple random sample)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_score_mu_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Score function generator given data `x` for the normal\ndistribution — normal_score_mu_var","title":"Score function generator given data `x` for the normal\ndistribution — normal_score_mu_var","text":"Score function generator given data `x` normal distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_score_mu_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score function generator given data `x` for the normal\ndistribution — normal_score_mu_var","text":"","code":"normal_score_mu_var(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/normal_score_mu_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score function generator given data `x` for the normal\ndistribution — normal_score_mu_var","text":"x data (simple random sample)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of parameters of an boot object. — nparams.boot","title":"Method for obtaining the number of parameters of an boot object. — nparams.boot","text":"Method obtaining number parameters boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of parameters of an boot object. — nparams.boot","text":"","code":"# S3 method for boot nparams(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of parameters of an boot object. — nparams.boot","text":"x boot object obtain number parameters ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic method for obtaining the number of parameters of a fitted\ndistribution object. — nparams","title":"Generic method for obtaining the number of parameters of a fitted\ndistribution object. — nparams","text":"Generic method obtaining number parameters fitted distribution object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic method for obtaining the number of parameters of a fitted\ndistribution object. — nparams","text":"","code":"nparams(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic method for obtaining the number of parameters of a fitted\ndistribution object. — nparams","text":"x fitted object obtain number parameters ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of parameters of an `mle` object. — nparams.mle","title":"Method for obtaining the number of parameters of an `mle` object. — nparams.mle","text":"Method obtaining number parameters `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of parameters of an `mle` object. — nparams.mle","text":"","code":"# S3 method for mle nparams(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of parameters of an `mle` object. — nparams.mle","text":"x `mle` object obtain number parameters ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of parameters of an `boot` object. — nparams.mle_boot","title":"Method for obtaining the number of parameters of an `boot` object. — nparams.mle_boot","text":"Method obtaining number parameters `boot` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of parameters of an `boot` object. — nparams.mle_boot","text":"","code":"# S3 method for mle_boot nparams(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/nparams.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of parameters of an `boot` object. — nparams.mle_boot","text":"x `boot` object obtain number parameters ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the observations used by the mle. — obs.boot","title":"Method for obtaining the observations used by the mle. — obs.boot","text":"Method obtaining observations used mle.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the observations used by the mle. — obs.boot","text":"","code":"# S3 method for boot obs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the observations used by the mle. — obs.boot","text":"object mle object obtain number observations ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for obtaining the observations used by a fitted model `object`. — obs","title":"Generic function for obtaining the observations used by a fitted model `object`. — obs","text":"Generic function obtaining observations used fitted model `object`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for obtaining the observations used by a fitted model `object`. — obs","text":"","code":"obs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for obtaining the observations used by a fitted model `object`. — obs","text":"object fitted object obtain number observations used fit ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the observations used by the `mle`. — obs.mle","title":"Method for obtaining the observations used by the `mle`. — obs.mle","text":"Method obtaining observations used `mle`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the observations used by the `mle`. — obs.mle","text":"","code":"# S3 method for mle obs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the observations used by the `mle`. — obs.mle","text":"object `mle` object obtain number observations ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the observations used by the `mle`. — obs.mle_boot","title":"Method for obtaining the observations used by the `mle`. — obs.mle_boot","text":"Method obtaining observations used `mle`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the observations used by the `mle`. — obs.mle_boot","text":"","code":"# S3 method for mle_boot obs(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/obs.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the observations used by the `mle`. — obs.mle_boot","text":"object `mle` object obtain number observations ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_local_search — mle_local_search","title":"mle_local_search — mle_local_search","text":"assumes MLE interior point provided initial guess `theta0` near . Use global search method like `sim_anneal` find good initial guess.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_local_search — mle_local_search","text":"","code":"mle_local_search(ll, dir, theta0, options = list())"},{"path":"https://queelius.github.io/algebraic.mle/reference/options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_local_search — mle_local_search","text":"ll function, log-likelihood function dir function, promising direction function theta0 numeric, initial guess options list, options local search, see function description.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_local_search — mle_local_search","text":"`mle` object additional attributes `iter` `converged`         optionally `path` `trace` TRUE.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"mle_local_search — mle_local_search","text":"mle_local_search(): Optional Arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/options.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"mle_local_search — mle_local_search","text":"sup function, domain support log-likelihood eta numeric, learning rate, defaults 1 max_iter integer, maximum number iterations, defaults 1000 max_iter_ls integer, maximum number iterations line search, defaults 1000 abs_tol numeric, tolerance convergence, defaults NULL (use rel_tol instead) rel_tol numeric, relative tolerance convergence, defaults 1e-5 r numeric, backtracking line search parameter, defaults 0.8 proj function, projection function enforce domain support norm function, pass difference successive theta updates norm check convergence, defaults infinity norm. debug logical, output debugging information TRUE; default FALSE trace logical, TRUE store path search `path` attribute output; default FALSE","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/orthogonal.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for determining the orthogonal parameters of an estimator. — orthogonal","title":"Method for determining the orthogonal parameters of an estimator. — orthogonal","text":"Method determining orthogonal parameters estimator.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/orthogonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for determining the orthogonal parameters of an estimator. — orthogonal","text":"","code":"orthogonal(x, tol, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/orthogonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for determining the orthogonal parameters of an estimator. — orthogonal","text":"x estimator tol tolerance determining number close enough zero ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/orthogonal.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for determining the orthogonal components of an `mle` object\n`x`. — orthogonal.mle","title":"Method for determining the orthogonal components of an `mle` object\n`x`. — orthogonal.mle","text":"Method determining orthogonal components `mle` object `x`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/orthogonal.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for determining the orthogonal components of an `mle` object\n`x`. — orthogonal.mle","text":"","code":"# S3 method for mle orthogonal(x, tol = sqrt(.Machine$double.eps), ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/orthogonal.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for determining the orthogonal components of an `mle` object\n`x`. — orthogonal.mle","text":"x `mle` object tol tolerance determining number close enough zero ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the parameters of an boot object. — params.boot","title":"Method for obtaining the parameters of an boot object. — params.boot","text":"Method obtaining parameters boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the parameters of an boot object. — params.boot","text":"","code":"# S3 method for boot params(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/params.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the parameters of an boot object. — params.boot","text":"x boot object obtain parameters .","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the parameters of a fitted distribution object. — params","title":"Method for obtaining the parameters of a fitted distribution object. — params","text":"Method obtaining parameters fitted distribution object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the parameters of a fitted distribution object. — params","text":"","code":"params(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the parameters of a fitted distribution object. — params","text":"x fitted object obtain parameters ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the parameters of an `mle` object. — params.mle","title":"Method for obtaining the parameters of an `mle` object. — params.mle","text":"Method obtaining parameters `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the parameters of an `mle` object. — params.mle","text":"","code":"# S3 method for mle params(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/params.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the parameters of an `mle` object. — params.mle","text":"x `mle` object obtain parameters ","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the parameters of an `boot` object. — params.mle_boot","title":"Method for obtaining the parameters of an `boot` object. — params.mle_boot","text":"Method obtaining parameters `boot` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/params.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the parameters of an `boot` object. — params.mle_boot","text":"","code":"# S3 method for mle_boot params(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/params.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the parameters of an `boot` object. — params.mle_boot","text":"x `boot` object obtain parameters .","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the point estimate of an mle object. — point.boot","title":"Computes the point estimate of an mle object. — point.boot","text":"Computes point estimate mle object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the point estimate of an mle object. — point.boot","text":"","code":"# S3 method for boot point(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/point.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the point estimate of an mle object. — point.boot","text":"x boot object. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic method for obtaining the best point estimate from an estimator. — point","title":"Generic method for obtaining the best point estimate from an estimator. — point","text":"Generic method obtaining best point estimate estimator.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic method for obtaining the best point estimate from an estimator. — point","text":"","code":"point(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic method for obtaining the best point estimate from an estimator. — point","text":"x object obtain point estimate ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the point estimate of an `mle` object. — point.mle","title":"Computes the point estimate of an `mle` object. — point.mle","text":"Computes point estimate `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the point estimate of an `mle` object. — point.mle","text":"","code":"# S3 method for mle point(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/point.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the point estimate of an `mle` object. — point.mle","text":"x `mle` object. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the point estimate of an `mle` object. — point.mle_boot","title":"Computes the point estimate of an `mle` object. — point.mle_boot","text":"Computes point estimate `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/point.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the point estimate of an `mle` object. — point.mle_boot","text":"","code":"# S3 method for mle_boot point(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/point.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the point estimate of an `mle` object. — point.mle_boot","text":"x `boot` object. ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the predictive confidence interval given an estimator object `x`. — pred","title":"Compute the predictive confidence interval given an estimator object `x`. — pred","text":"Compute predictive confidence interval given estimator object `x`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the predictive confidence interval given an estimator object `x`. — pred","text":"","code":"pred(x, samp = NULL, alpha = 0.05, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the predictive confidence interval given an estimator object `x`. — pred","text":"x estimator object samp sampler random variable parameterized mle `x` alpha (1-alpha)/2 confidence interval ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining an empirical sampling distribution from the asymptotic\ndistribution of the mle object x when applied to a function\ng. — pred.interval","title":"Function for obtaining an empirical sampling distribution from the asymptotic\ndistribution of the mle object x when applied to a function\ng. — pred.interval","text":"Function obtaining empirical sampling distribution asymptotic distribution mle object x applied function g.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining an empirical sampling distribution from the asymptotic\ndistribution of the mle object x when applied to a function\ng. — pred.interval","text":"","code":"pred.interval(x, g, n = 1000, alpha = 0.05, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining an empirical sampling distribution from the asymptotic\ndistribution of the mle object x when applied to a function\ng. — pred.interval","text":"x mle object g function predict value respect input x n sample size alpha confidence-level, (1-alpha) ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of predictive interval of `T|x` where `T` is a statistic and `x`\nis an `mle` object that it is conditioned on. Generally, what this means\nis that we want to find the distribution of `T` when we marginalize over\nthe distribution of `x`, since `x` is an uncertain estimate of the true\nparameter value. — pred.mle","title":"Estimate of predictive interval of `T|x` where `T` is a statistic and `x`\nis an `mle` object that it is conditioned on. Generally, what this means\nis that we want to find the distribution of `T` when we marginalize over\nthe distribution of `x`, since `x` is an uncertain estimate of the true\nparameter value. — pred.mle","text":"Let   `T|x ~ f(t|x)`` pdf vector `T` given MLE `x`   `x ~ MVN(point(x),vcov(x))`` multivariate normal MLE `x`. ,   `(T,x) ~ f(t,x) = f(t|x) f(x) joint distribution `(T,x)`. find `f(t)`, integrate `f(t,theta.hat)` `x`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of predictive interval of `T|x` where `T` is a statistic and `x`\nis an `mle` object that it is conditioned on. Generally, what this means\nis that we want to find the distribution of `T` when we marginalize over\nthe distribution of `x`, since `x` is an uncertain estimate of the true\nparameter value. — pred.mle","text":"","code":"# S3 method for mle pred(x, samp, alpha = 0.05)"},{"path":"https://queelius.github.io/algebraic.mle/reference/pred.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate of predictive interval of `T|x` where `T` is a statistic and `x`\nis an `mle` object that it is conditioned on. Generally, what this means\nis that we want to find the distribution of `T` when we marginalize over\nthe distribution of `x`, since `x` is an uncertain estimate of the true\nparameter value. — pred.mle","text":"x `mle` object samp `mle` sampler parametric distribution function `x` alpha (1-alpha)-predictive interval `T|x`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/print.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the number of observations in the sample used by\nan `mle` object `x`. — print.mle","title":"Method for obtaining the number of observations in the sample used by\nan `mle` object `x`. — print.mle","text":"Method obtaining number observations sample used `mle` object `x`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/print.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the number of observations in the sample used by\nan `mle` object `x`. — print.mle","text":"","code":"# S3 method for mle print(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/print.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the number of observations in the sample used by\nan `mle` object `x`. — print.mle","text":"x `mle` object print ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/print.summary_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for printing a `summary` object for an `mle` object. — print.summary_mle","title":"Function for printing a `summary` object for an `mle` object. — print.summary_mle","text":"Function printing `summary` object `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/print.summary_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for printing a `summary` object for an `mle` object. — print.summary_mle","text":"","code":"# S3 method for summary_mle print(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/print.summary_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for printing a `summary` object for an `mle` object. — print.summary_mle","text":"object `summary_mle` object ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for computing the distribution of `f(x)` where `x`\nmodels a distribution (random element) object. — rmap","title":"Generic function for computing the distribution of `f(x)` where `x`\nmodels a distribution (random element) object. — rmap","text":"apply function `f` distribution `x`, result distribution object `f(x)`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for computing the distribution of `f(x)` where `x`\nmodels a distribution (random element) object. — rmap","text":"","code":"rmap(x, g, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for computing the distribution of `f(x)` where `x`\nmodels a distribution (random element) object. — rmap","text":"x list distribution (random element) objects. g function accepts arguments sampled distribution objects `x`. ... additional arguments pass.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"rmap.mle — rmap.mle","title":"rmap.mle — rmap.mle","text":"Computes distribution `g(x)` `x` `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rmap.mle — rmap.mle","text":"","code":"# S3 method for mle rmap(x, g, n = 1000L, method = \"mc\", ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rmap.mle — rmap.mle","text":"x list distribution (random element) objects. g function accepts arguments sampled distribution objects `x`. n number samples take estimate distribution `g(x)` `method==\"mc\"`. method method use estimate distribution `g(x)`, \"delta\" \"mc\". ... additional arguments pass `mle` sampler `method==\"mc\"` `grad` function `method==\"delta\"`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/rmap.mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rmap.mle — rmap.mle","text":"invariance property MLE, `x` `mle` object, right conditions, asymptotically, `g(x)` normally distributed,     g(x) ~ normal(g(point(x)),sigma) `sigma` variance-covariance `f(x)` provide two different methods estimating variance-covariance `f(x)`:     method = \"delta\" -> delta method     method = \"mc\" -> monte carlo method","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_mle_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining sample points for an `mle` object that is within\nthe `p`-probability region. — sample_mle_region","title":"Function for obtaining sample points for an `mle` object that is within\nthe `p`-probability region. — sample_mle_region","text":"Function obtaining sample points `mle` object within `p`-probability region.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_mle_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining sample points for an `mle` object that is within\nthe `p`-probability region. — sample_mle_region","text":"","code":"sample_mle_region(n, x, p = 0.95)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_mle_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining sample points for an `mle` object that is within\nthe `p`-probability region. — sample_mle_region","text":"n sample size x `mle` object p probability region","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for determining the sample size of an estimator object. — sample_size","title":"Method for determining the sample size of an estimator object. — sample_size","text":"Method determining sample size estimator object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for determining the sample size of an estimator object. — sample_size","text":"","code":"sample_size(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for determining the sample size of an estimator object. — sample_size","text":"x estimator","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_size.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for determining the sample size of an mle object. — sample_size.mle","title":"Method for determining the sample size of an mle object. — sample_size.mle","text":"Method determining sample size mle object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_size.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for determining the sample size of an mle object. — sample_size.mle","text":"","code":"# S3 method for mle sample_size(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sample_size.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for determining the sample size of an mle object. — sample_size.mle","text":"x mle object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for sampling from an boot object. — sampler.boot","title":"Method for sampling from an boot object. — sampler.boot","text":"creates sampler boot object. returns function accepts single parameter n denoting number samples draw boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for sampling from an boot object. — sampler.boot","text":"","code":"# S3 method for boot sampler(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for sampling from an boot object. — sampler.boot","text":"x boot object create sampler ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for sampling from distribution objects. — sampler","title":"Generic function for sampling from distribution objects. — sampler","text":"creates sampler `x` object. returns function accepts single parameter `n` denoting number samples draw `x` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for sampling from distribution objects. — sampler","text":"","code":"sampler(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for sampling from distribution objects. — sampler","text":"x `x` object create sampler ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for sampling from an `mle` object. — sampler.mle","title":"Method for sampling from an `mle` object. — sampler.mle","text":"creates sampler `mle` object. returns function accepts single parameter `n` denoting number samples draw `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for sampling from an `mle` object. — sampler.mle","text":"","code":"# S3 method for mle sampler(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for sampling from an `mle` object. — sampler.mle","text":"x `mle` object create sampler ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for sampling from an `mle_boot` object. — sampler.mle_boot","title":"Method for sampling from an `mle_boot` object. — sampler.mle_boot","text":"creates sampler `mle_boot` object. returns function accepts single parameter `n` denoting number samples draw `mle_boot` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for sampling from an `mle_boot` object. — sampler.mle_boot","text":"","code":"# S3 method for mle_boot sampler(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for sampling from an `mle_boot` object. — sampler.mle_boot","text":"x `mle_boot` object create sampler ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sampler.mle_boot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Method for sampling from an `mle_boot` object. — sampler.mle_boot","text":"Unlike `sampler` method general `mle` objects, `mle_boot` objects, sample bootstrap replicates, representative sampling distribution, particularly small samples.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"score — score","title":"score — score","text":"Generic function computing score estimator object respect log-likelihood.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"score — score","text":"","code":"score(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"score — score","text":"x object compute score . ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/score.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"score — score.mle","title":"score — score.mle","text":"Computes score `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/score.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"score — score.mle","text":"","code":"# S3 method for mle score(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/score.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"score — score.mle","text":"x object compute score . ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/score.mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"score — score.mle","text":"reguarlity conditions satisfied, zero (approximately, rounding errors occur).","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE object. — se.boot","title":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE object. — se.boot","text":"Function obtaining estimate standard error bootstrap MLE object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE object. — se.boot","text":"","code":"# S3 method for boot se(object)"},{"path":"https://queelius.github.io/algebraic.mle/reference/se.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE object. — se.boot","text":"object bootstrapped MLE object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for obtaining the standard error of an estimator. — se","title":"Method for obtaining the standard error of an estimator. — se","text":"Method obtaining standard error estimator.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for obtaining the standard error of an estimator. — se","text":"","code":"se(object)"},{"path":"https://queelius.github.io/algebraic.mle/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for obtaining the standard error of an estimator. — se","text":"object estimator","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining an estimate of the standard error of the MLE\n`object`. — se.mle","title":"Function for obtaining an estimate of the standard error of the MLE\n`object`. — se.mle","text":"Function obtaining estimate standard error MLE `object`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining an estimate of the standard error of the MLE\n`object`. — se.mle","text":"","code":"# S3 method for mle se(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/se.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining an estimate of the standard error of the MLE\n`object`. — se.mle","text":"object MLE object ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE `object`. — se.mle_boot","title":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE `object`. — se.mle_boot","text":"Function obtaining estimate standard error bootstrap MLE `object`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/se.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE `object`. — se.mle_boot","text":"","code":"# S3 method for mle_boot se(object)"},{"path":"https://queelius.github.io/algebraic.mle/reference/se.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining an estimate of the standard error of the bootstrap of\nthe MLE `object`. — se.mle_boot","text":"object bootstrapped MLE object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sim_anneal.html","id":null,"dir":"Reference","previous_headings":"","what":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","title":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","text":"function implements simulated annealing algorithm, global optimization algorithm useful finding good starting point local optimization algorithm. return MLE object , good estimate MLE, gradient `f` evaluated solution close zero, assuming MLE interior domain `f`. However, since algorithm guided gradient information, sensitive gradient `f` instead seeks maximize `f`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sim_anneal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","text":"","code":"sim_anneal(par, fn, control = list(), ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/sim_anneal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","text":"par Initial guess fn Objective function maximize control List optional arguments ... Additional arguments may passed; loads options, also passed `neigh`","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sim_anneal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","text":"list, members include:            `par`: best solution            `value`: function value `fn(par)`            `fn_count`: count `fn` invocations            `accepted`: count accepted moves            `trace_info`: matrix trace information (optional)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sim_anneal.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","text":"sim_anneal(): control","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/sim_anneal.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"This function implements the simulated annealing algorithm,\nwhich is a global optimization algorithm that is useful for\nfinding a good starting point for a local optimization algorithm.\nWe do not return this as an MLE object because, to be a good\nestimate of the MLE, the gradient of `f` evaluated\nat its solution should be close to zero, assuming the MLE\nis interior to the domain of `f`. However, since this algorithm\nis not guided by gradient information, it is not sensitive to\nthe gradient of `f` and instead only seeks to maximize `f`. — sim_anneal","text":"t_init Initial temperature, defaults 100 t_end Final temperature, defaults 0 alpha Numberic, cooling factor, defaults .95 REPORT frequency reports control$debug > 0. Defaults every 100 iterations. it_per_temp Ineger, iterations per temperature, defaults 100 maxit Integer, maximum number iterations, defaults 100000 accept_p Acceptance probability function, defaults `runif(1) < exp((val0 - val1) / temp)`, `val0` function value current position `val1` function value proposed position. pass `temp` (temperature), `val1` (new value candidate position `par1`), `val0` (old value current position), `` (iteration), `...` arguments `accept_p`. fnscale Scaling factor `fn`, defaults 1. negative, turns problem maximization problem. sup Support function, returns TRUE `par` domain `fn` proj Projection function, returns vector domain `fn` neigh Neighborhood function, returns random neighbor `par`, defaults `par + rnorm(length(par))`. pass `par` `temp`, ``, `value`, `...` arguments `neigh`. trace logical, whether store current changes position associated values `trace_info` matrix.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/stat.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap method — stat.boot","title":"Bootstrap method — stat.boot","text":"Bootstrap method","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/stat.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap method — stat.boot","text":"","code":"stat.boot(xs, stat, B = 10000, keep_boots = F, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/stat.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap method — stat.boot","text":"xs data stat statistic data B bootstrap replicates ... additional arguments pass.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/summary.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining a summary of object, which is a fitted\nboot object. — summary.boot","title":"Function for obtaining a summary of object, which is a fitted\nboot object. — summary.boot","text":"Function obtaining summary object, fitted boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/summary.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining a summary of object, which is a fitted\nboot object. — summary.boot","text":"","code":"# S3 method for boot summary(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/summary.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining a summary of object, which is a fitted\nboot object. — summary.boot","text":"object boot object ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/summary.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for obtaining a summary of `object`, which is a fitted\n`mle` object. — summary.mle","title":"Function for obtaining a summary of `object`, which is a fitted\n`mle` object. — summary.mle","text":"Function obtaining summary `object`, fitted `mle` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/summary.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for obtaining a summary of `object`, which is a fitted\n`mle` object. — summary.mle","text":"","code":"# S3 method for mle summary(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/summary.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for obtaining a summary of `object`, which is a fitted\n`mle` object. — summary.mle","text":"object `mle` object ... pass additional arguments","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/two.sample.test.html","id":null,"dir":"Reference","previous_headings":"","what":"General two sample hypothesis test. — two.sample.test","title":"General two sample hypothesis test. — two.sample.test","text":"General two sample hypothesis test.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/two.sample.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General two sample hypothesis test. — two.sample.test","text":"","code":"two.sample.test(sampler, obs, cdf = NULL, options = list(), ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/two.sample.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General two sample hypothesis test. — two.sample.test","text":"sampler random sampler reference distribution obs sample observations cdf cdf reference distribution, defaults NULL n sample size (sampler) method method two sample hypothesis test","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/two.sample.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General two sample hypothesis test. — two.sample.test","text":"hypothesis test object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/unbiased_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for retrieving an unbiased point estimate from an MLE object — unbiased_point","title":"Function for retrieving an unbiased point estimate from an MLE object — unbiased_point","text":"Function retrieving unbiased point estimate MLE object","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/unbiased_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for retrieving an unbiased point estimate from an MLE object — unbiased_point","text":"","code":"unbiased_point(x, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/unbiased_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for retrieving an unbiased point estimate from an MLE object — unbiased_point","text":"x mle object ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the variance-covariance matrix of boot object. — vcov.boot","title":"Computes the variance-covariance matrix of boot object. — vcov.boot","text":"Computes variance-covariance matrix boot object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the variance-covariance matrix of boot object. — vcov.boot","text":"","code":"# S3 method for boot vcov(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the variance-covariance matrix of boot object. — vcov.boot","text":"object boot object obtain variance-covariance ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the variance-covariance matrix of `mle` objects. — vcov.mle","title":"Computes the variance-covariance matrix of `mle` objects. — vcov.mle","text":"Computes variance-covariance matrix `mle` objects.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the variance-covariance matrix of `mle` objects. — vcov.mle","text":"","code":"# S3 method for mle vcov(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the variance-covariance matrix of `mle` objects. — vcov.mle","text":"object `mle` object obtain variance-covariance ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.mle_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the variance-covariance matrix of `boot` object. — vcov.mle_boot","title":"Computes the variance-covariance matrix of `boot` object. — vcov.mle_boot","text":"Computes variance-covariance matrix `boot` object.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.mle_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the variance-covariance matrix of `boot` object. — vcov.mle_boot","text":"","code":"# S3 method for mle_boot vcov(object, ...)"},{"path":"https://queelius.github.io/algebraic.mle/reference/vcov.mle_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the variance-covariance matrix of `boot` object. — vcov.mle_boot","text":"object `boot` object obtain variance-covariance ... additional arguments pass","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_fim.html","id":null,"dir":"Reference","previous_headings":"","what":"weibull_fim — weibull_fim","title":"weibull_fim — weibull_fim","text":"Observed Fisher information generator given data `x` weibull distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_fim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"weibull_fim — weibull_fim","text":"","code":"weibull_fim(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_fim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"weibull_fim — weibull_fim","text":"x observed data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_fisher_info.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood function generator given data x for the weibull\ndistribution — weibull_fisher_info","title":"log-likelihood function generator given data x for the weibull\ndistribution — weibull_fisher_info","text":"log-likelihood function generator given data x weibull distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_fisher_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood function generator given data x for the weibull\ndistribution — weibull_fisher_info","text":"","code":"weibull_fisher_info(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_fisher_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood function generator given data x for the weibull\ndistribution — weibull_fisher_info","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"A log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_loglike","title":"A log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_loglike","text":"returned log-likelihood function takes single vector `par` size `2` (least) first component shape parameter `k` second component scale parameter `lambda` E[X] = lambda * GAMMA(1 + 1/k).","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_loglike","text":"","code":"weibull_loglike(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_loglike","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_loglike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_loglike","text":"log-likelihood function weibull distribution         shape parameter `k` scale parameter `lambda`         given data `x`. (Accepts parameter vector `par` size 2.)","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_score.html","id":null,"dir":"Reference","previous_headings":"","what":"score function generator given data `x` for the weibull\ndistributison given a simple random sample. — weibull_score","title":"score function generator given data `x` for the weibull\ndistributison given a simple random sample. — weibull_score","text":"score function generator given data `x` weibull distributison given simple random sample.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"score function generator given data `x` for the weibull\ndistributison given a simple random sample. — weibull_score","text":"","code":"weibull_score(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"score function generator given data `x` for the weibull\ndistributison given a simple random sample. — weibull_score","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_fim.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood function generator given data `x` for the weibull\ndistribution — weibull_shape_scale_fim","title":"log-likelihood function generator given data `x` for the weibull\ndistribution — weibull_shape_scale_fim","text":"log-likelihood function generator given data `x` weibull distribution","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_fim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood function generator given data `x` for the weibull\ndistribution — weibull_shape_scale_fim","text":"","code":"weibull_shape_scale_fim(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_fim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood function generator given data `x` for the weibull\ndistribution — weibull_shape_scale_fim","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_loglike.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_shape_scale_loglike","title":"log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_shape_scale_loglike","text":"returned log-likelihood function takes single vector `theta` size `2` (least) first component shape parameter `k` second component scale parameter `lambda`.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_loglike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_shape_scale_loglike","text":"","code":"weibull_shape_scale_loglike(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_loglike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_shape_scale_loglike","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_loglike.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log-likelihood function generator given data `x` for the weibull\ndistribution. — weibull_shape_scale_loglike","text":"can used statistical models optimization algorithms estimate parameters Weibull distribution.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_score.html","id":null,"dir":"Reference","previous_headings":"","what":"score function generator given data `x` for the weibull\ndistribution given a simple random sample. — weibull_shape_scale_score","title":"score function generator given data `x` for the weibull\ndistribution given a simple random sample. — weibull_shape_scale_score","text":"score function generator given data `x` weibull distribution given simple random sample.","code":""},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"score function generator given data `x` for the weibull\ndistribution given a simple random sample. — weibull_shape_scale_score","text":"","code":"weibull_shape_scale_score(x)"},{"path":"https://queelius.github.io/algebraic.mle/reference/weibull_shape_scale_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"score function generator given data `x` for the weibull\ndistribution given a simple random sample. — weibull_shape_scale_score","text":"x data","code":""},{"path":"https://queelius.github.io/algebraic.mle/news/index.html","id":"algebraicmle-09","dir":"Changelog","previous_headings":"","what":"algebraic.mle 0.9","title":"algebraic.mle 0.9","text":"release candidate.","code":""},{"path":"https://queelius.github.io/algebraic.mle/news/index.html","id":"algebraicmle-01","dir":"Changelog","previous_headings":"","what":"algebraic.mle 0.1","title":"algebraic.mle 0.1","text":"initial alpha release.","code":""}]
