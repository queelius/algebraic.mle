# Generated by roxygen2: do not edit by hand

S3method(aic,mle)
S3method(bias,boot)
S3method(bias,mle)
S3method(bias,mle_exp)
S3method(bias,mle_normal)
S3method(confint,boot)
S3method(confint,mle)
S3method(fisher_info,mle)
S3method(loglike,mle)
S3method(mse,boot)
S3method(mse,mle)
S3method(nobs,boot)
S3method(nobs,mle)
S3method(nparams,boot)
S3method(nparams,mle)
S3method(obs,boot)
S3method(obs,mle)
S3method(orthogonal,mle)
S3method(params,boot)
S3method(params,mle)
S3method(point,boot)
S3method(point,mle)
S3method(print,mle)
S3method(rmap,mle)
S3method(sample_size,mle)
S3method(sampler,boot)
S3method(sampler,mle)
S3method(score,mle)
S3method(se,boot)
S3method(se,mle)
S3method(summary,boot)
S3method(summary,mle)
S3method(vcov,boot)
S3method(vcov,mle)
export(aic)
export(bias)
export(boot_estimate)
export(chisqr.test)
export(cramer.test)
export(exp_rate_fisher_info)
export(exp_rate_loglike)
export(exp_rate_score)
export(fisher_info)
export(is_mle)
export(loglike)
export(make_mle)
export(mle_boot)
export(mle_boot_loglike)
export(mle_exp)
export(mle_gradient_ascent)
export(mle_iterative)
export(mle_linear_transform)
export(mle_newton_raphson)
export(mle_normal)
export(mle_normal_mu_var)
export(mle_solver_random_restarts)
export(mle_weibull)
export(mle_weighted)
export(mse)
export(normal_fisher_info)
export(normal_loglike)
export(normal_score)
export(nparams)
export(obs)
export(orthogonal)
export(params)
export(point)
export(pred)
export(pred.interval)
export(rmap)
export(sample_mle_region)
export(sample_size)
export(sampler)
export(score)
export(se)
export(two.sample.test)
export(unbiased_point)
export(weibull_fisher_info)
export(weibull_loglike)
export(weibull_score)
importFrom(CDFt,CramerVonMisesTwoSamples)
importFrom(CDFt,KolmogorovSmirnov)
importFrom(MASS,ginv)
importFrom(boot,boot)
importFrom(boot,boot.ci)
importFrom(numDeriv,grad)
importFrom(plyr,raply)
importFrom(stats,chisq.test)
importFrom(stats,confint)
importFrom(stats,cov)
importFrom(stats,mahalanobis)
importFrom(stats,nobs)
importFrom(stats,qchisq)
importFrom(stats,qnorm)
importFrom(stats,var)
importFrom(stats,vcov)
importFrom(zoo,rollapply)
